{"version":3,"sources":["webpack:///src/app/app.component.css","webpack:///src/app/app.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/services/socket.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["__webpack_require__","r","__webpack_exports__","default","AppRoutingModule","tslib_es6","b","Object","core","I","imports","router","a","forRoot","exports","socket_service_SocketService","[object Object]","this","socket","lib","transports","data","emit","Observable","observer","on","next","A","socket_service","app_component_AppComponent","socketService","title","editor","ckeditor","content","update","subscribe","editorData","getData","type","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","n","selector","template","c","AppModule","declarations","platform_browser","fesm2015_forms","ckeditor_ckeditor5_angular","providers","bootstrap","platform_browser_dynamic","bootstrapModule","catch","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","id"],"mappings":"oJAAAA,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,sCCAfH,EAAAC,EAAAC,GAAeA,EAAAC,QAAA,smBCUf,IAAaC,EAAb,QAAaA,EAAgBC,EAAAC,EAAA,CAJ5BC,OAAAC,EAAAC,EAAAF,CAAS,CACRG,QAAS,CAACC,EAAAC,EAAaC,QAHF,KAIrBC,QAAS,CAACH,EAAAC,MAECR,+BCLb,IAAqBW,EAArB,MAGIC,cACIC,KAAKC,OAASC,EAAG,wDAAyD,CAACC,WAAY,CAAC,eAGrFJ,KAAKK,GACRJ,KAAKC,OAAOI,KAAK,OAAQD,GAGtBL,SACH,OAAO,IAAIO,EAAAX,EAAWY,IAClBP,KAAKC,OAAOO,GAAG,SAAWJ,GAAiBG,EAASE,KAAKL,QAbhDN,EAAaV,EAAAC,EAAA,CADjCC,OAAAC,EAAAmB,EAAApB,IACoBQ,GAAA,IAAAa,EAAAb,cCKrB,IAAac,EAAb,MAIEb,YAAoBc,GAAAb,KAAAa,cAAAA,EAHpBb,KAAAc,MAAQ,2BAEDd,KAAAe,OAASC,EAEdhB,KAAKiB,QAAU,GACfjB,KAAKa,cAAcK,SAASC,UAAUf,GAAQJ,KAAKiB,QAAUb,GAG/DL,QAAOgB,OAACA,IACN,MAAMK,EAAaL,EAAOM,UACvBrB,KAAKiB,UAAYG,IAClBpB,KAAKiB,QAAUG,EACfpB,KAAKa,cAAcS,KAAKtB,KAAKiB,UAG1BlB,QAASgB,GACdA,EAAOQ,GAAGC,qBAAqBC,cAAcC,aACzCX,EAAOQ,GAAGI,KAAKC,QAAQC,QACvBd,EAAOQ,GAAGC,oDAfmBb,IAJxBC,EAAYxB,EAAAC,EAAA,CALxBC,OAAAC,EAAAuC,EAAAxC,CAAU,CACTyC,SAAU,WACVC,SAAA5C,EAAA6C,EAAAlD,EAAA,SAAAG,2CAGW0B,+BCYb,IAAasB,EAAb,QAAaA,EAAS9C,EAAAC,EAAA,CAbrBC,OAAAC,EAAAC,EAAAF,CAAS,CACR6C,aAAc,CACZvB,GAEFnB,QAAS,CACP2C,EAAAzC,EACAR,EACAkD,EAAA1C,EACA2C,EAAA3C,GAEF4C,UAAW,CAAC5B,GACZ6B,UAAW,CAAC5B,MAEDsB,GCZb5C,OAAAmD,EAAA9C,EAAAL,GAAyBoD,gBAAgBR,GACtCS,MAAMC,GAAOC,QAAQC,MAAMF,wBCX9B,SAASG,EAAyBC,GAGjC,OAAOC,QAAQC,UAAUC,MAAAA,WACxB,IAAIC,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,KAGRL,EAAyBQ,KAAO,WAAa,MAAO,IACpDR,EAAyBG,QAAUH,EACnCS,EAAO3D,QAAUkD,EACjBA,EAAyBU,GAAK","file":"main-es2015.js","sourcesContent":["export default \"\"","export default \"<div id=\\\"background\\\">\\n    <div id=\\\"container-principal\\\" class=\\\"d-flex\\\">\\n        <div id=\\\"container-lateral-menu\\\">\\n            <div class=\\\"title\\\">\\n                Participantes\\n            </div>\\n        </div>\\n        <div class=\\\"conteudo\\\">\\n            <ckeditor [editor]=\\\"editor\\\" [ngModel]=\\\"content\\\" (change)=\\\"change($event)\\\" (ready)=\\\"onReady($event)\\\"></ckeditor>\\n        </div>\\n    </div>\\n\\n    <!-- <div id=\\\"lateral-menu\\\" class=\\\"col-md-3 col-xl-2 bd-sidebar\\\">\\n\\n    </div> -->\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Injectable} from '@angular/core';\r\nimport * as io from 'socket.io-client';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport default class SocketService {\r\n    socket: SocketIOClient.Socket\r\n\r\n    constructor() {\r\n        this.socket = io('https://colaborative-text-editor-serve.herokuapp.com/', {transports: ['websocket']})\r\n    }\r\n\r\n    public type(data: string): void {\r\n        this.socket.emit('type', data)\r\n    }\r\n\r\n    public update(): Observable<string> {\r\n        return new Observable(observer => {\r\n            this.socket.on('update', (data: string) => observer.next(data))\r\n        });\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\nimport SocketService from './services/socket.service';\nimport * as DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document';\nimport { ChangeEvent } from '@ckeditor/ckeditor5-angular/ckeditor.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'colaborative-text-editor';\n  content: string;\n  public editor = DecoupledEditor;\n  constructor(private socketService: SocketService) {\n    this.content = '';\n    this.socketService.update().subscribe(data => this.content = data);\n  }\n\n  change({editor}: ChangeEvent) {\n    const editorData = editor.getData();\n    if(this.content !== editorData){\n      this.content = editorData;\n      this.socketService.type(this.content);\n    }\n  }\n  public onReady( editor ) {\n    editor.ui.getEditableElement().parentElement.insertBefore(\n        editor.ui.view.toolbar.element,\n        editor.ui.getEditableElement()\n    );\n}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport SocketService from './services/socket.service';\nimport { FormsModule } from '@angular/forms';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    CKEditorModule\n  ],\n  providers: [SocketService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}