{"version":3,"sources":["webpack:///src/polyfills.ts","webpack:///node_modules/zone.js/dist/zone-evergreen.js"],"names":["__webpack_require__","r","__webpack_exports__","global","performance","mark","name","performanceMeasure","label","measure","checkDuplicate","__zone_symbol__forceDuplicateZoneCheck","Zone","__symbol__","Error","[object Object]","parent","zoneSpec","this","_parent","_name","_properties","properties","_zoneDelegate","ZoneDelegate","Promise","patches","ZoneAwarePromise","root","zone","current","_currentZoneFrame","currentTask","_currentTask","fn","hasOwnProperty","perfName","_api","key","getZoneWith","fork","callback","source","_callback","intercept","runGuarded","arguments","applyThis","applyArgs","invoke","error","handleError","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","scheduleTask","err","customSchedule","ZoneTask","microTask","customCancel","canceling","cancelTask","count","i","length","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","parentHasTask","targetZone","apply","returnTask","push","scheduleFn","scheduleMicroTask","value","isEmpty","counts","prev","next","change","options","_state","self","useG","call","args","_numberOfNestedTaskFrames","runTask","drainMicroTaskQueue","toState","fromState1","fromState2","handleId","toString","Object","prototype","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","resolve","nativeThen","then","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","setNativePromise","NativePromise","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","window","__load_patch","api","getOwnPropertyDescriptor","defineProperty","_uncaughtPromiseErrors","e","rejection","console","message","stack","uncaughtPromiseError","shift","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","forwardResolution","forwardRejection","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","makeResolver","promise","v","resolvePromise","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","wasCalled","wrappedFunction","TypeError","clearRejectedNoCatch","trace","__creationTrace__","configurable","enumerable","writable","scheduleResolveOrReject","obj","className","constructor","JSON","stringify","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","run","executor","values","res","rej","onResolve","onReject","unresolvedCount","valueIndex","resolvedValues","curValueIndex","get","Symbol","toStringTag","onFinally","race","all","ZONE_AWARE_PROMISE","desc","set","NewNativePromise","symbolThenPatched","Ctor","proto","prop","originalThen","fetch","resultPromise","ctor","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","wrap","scheduleMacroTaskWithCurrentZone","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","_global","NULL_ON_PROP_VALUE","isPropertyWritable","propertyDesc","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","HTMLElement","isMix","zoneSymbolEventNames","wrapFn","event","eventNameSymbol","listener","result","errorEvent","filename","lineno","colno","preventDefault","patchProperty","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","OriginalClass","a","instance","patchFn","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","isIE","ua","navigator","userAgent","indexOf","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames$1","globalSources","EVENT_NAME_SYMBOL_REGX","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","once","globalZoneAwareCallback","tasks","false","copyTasks","__zone_symbol__propagationStopped","globalZoneAwareCaptureCallback","true","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","eventNameToString","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","checkIsPassive","capture","prepend","customSchedulePrepend","isExisting","symbolEventNames","symbolEventName","existingTasks","allRemoved","compare","diff","typeOfDelegate","blackListedEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","isHandleEvent","symbolCapture","constructorName","targetSource","scheduleEventTask","unshift","prependListener","existingTask","findEventTasks","symbolCaptureEventName","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","zoneSymbol$1","_defineProperty","_getOwnPropertyDescriptor","_create","unconfigurablesKey","originalConfigurableFlag","_tryDefineProperty","rewriteDescriptor","isUnconfigurable","isFrozen","descJson","log","windowEventNames","mediaElementEventNames","frameEventNames","frameSetEventNames","marqueeEventNames","XMLHttpRequestEventNames","IDBIndexEventNames","websocketEventNames","workerEventNames","eventNames","concat","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","propertyDescriptorPatch","supportsWebSocket","WebSocket","__Zone_ignore_on_properties","ignoreErrorProperties","Document","SVGElement","Element","HTMLMediaElement","HTMLFrameSetElement","HTMLBodyElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","id","eventTargetPatch","EVENT_TARGET","EventTarget","legacyPatch","blockingMethods","s","defineProperties","props","customElements","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","__zone_symbol__loadfalse","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","geolocation","fnNames","findPromiseRejectionHandler","PromiseRejectionEvent","evt","reason"],"mappings":"oIAAAA,EAAAC,EAAAC,GAAAF,EAAA,6BCce,SAAWG,GACtB,MAAMC,EAAcD,EAAoBC,YACxC,SAASC,EAAKC,GACVF,GAAeA,EAAkBC,MAAKD,EAAkBC,KAAEC,GAE9D,SAASC,EAAmBD,EAAME,GAC9BJ,GAAeA,EAAqBK,SAAKL,EAAqBK,QAAEH,EAAME,GAE1EH,EAAK,QACL,MAAMK,GAAwE,IAAvDP,EAAiDQ,uCACxE,GAAIR,EAAaS,KAAG,CAUhB,GAAIF,GAAuD,mBAA9BP,EAAaS,KAAEC,WACxC,MAAM,IAAIC,MAAM,wBAGhB,OAAOX,EAAaS,KAG5B,MAAMA,EACFG,YAAYC,EAAQC,GAChBC,KAAKC,QAAUH,EACfE,KAAKE,MAAQH,EAAWA,EAASX,MAAQ,UAAY,SACrDY,KAAKG,YAAcJ,GAAYA,EAASK,YAAc,GACtDJ,KAAKK,cACD,IAAIC,EAAaN,KAAMA,KAAKC,SAAWD,KAAKC,QAAQI,cAAeN,GAE3EF,2BACI,GAAIZ,EAAgBsB,UAAMC,EAA0BC,iBAChD,MAAM,IAAIb,MAAM,iSAOxBc,kBACI,IAAIC,EAAOjB,EAAKkB,QAChB,KAAOD,EAAKb,QACRa,EAAOA,EAAKb,OAEhB,OAAOa,EAEXC,qBACI,OAAOC,EAAkBF,KAE7BG,yBACI,OAAOC,EAEXlB,oBAAoBT,EAAM4B,GACtB,GAAIR,EAAQS,eAAe7B,GAAAA,CACvB,GAAII,EACA,MAAMI,MAAM,yBAA2BR,QAG1C,IAAKH,EAAO,kBAAoBG,GAAO,CACxC,MAAM8B,EAAW,QAAU9B,EAC3BD,EAAK+B,GACLV,EAAQpB,GAAQ4B,EAAG/B,EAAQS,EAAMyB,GACjC9B,EAAmB6B,EAAUA,IAGrCpB,aACI,OAAOE,KAAKC,QAEhBb,WACI,OAAOY,KAAKE,MAEhBL,IAAIuB,GACA,MAAMT,EAAOX,KAAKqB,YAAYD,GAC9B,GAAIT,EACA,OAAOA,EAAKR,YAAYiB,GAEhCvB,YAAYuB,GACR,IAAIR,EAAUZ,KACd,KAAOY,GAAS,CACZ,GAAIA,EAAQT,YAAYc,eAAeG,GACnC,OAAOR,EAEXA,EAAUA,EAAQX,QAEtB,OAAO,KAEXJ,KAAKE,GACD,IAAKA,EACD,MAAM,IAAIH,MAAM,sBACpB,OAAOI,KAAKK,cAAciB,KAAKtB,KAAMD,GAEzCF,KAAK0B,EAAUC,GACX,GAAwB,mBAAbD,EACP,MAAM,IAAI3B,MAAM,2BAA6B2B,GAEjD,MAAME,EAAYzB,KAAKK,cAAcqB,UAAU1B,KAAMuB,EAAUC,GACzDb,EAAOX,KACb,OAAO,WACH,OAAOW,EAAKgB,WAAWF,EAAWzB,KAAM4B,UAAWJ,IAG3D3B,IAAI0B,EAAUM,EAAWC,EAAWN,GAChCX,EAAoB,CAAEf,OAAQe,EAAmBF,KAAMX,MACvD,IACI,OAAOA,KAAKK,cAAc0B,OAAO/B,KAAMuB,EAAUM,EAAWC,EAAWN,GAE3E,QACIX,EAAoBA,EAAkBf,QAG9CD,WAAW0B,EAAUM,EAAY,KAAMC,EAAWN,GAC9CX,EAAoB,CAAEf,OAAQe,EAAmBF,KAAMX,MACvD,IACI,IACI,OAAOA,KAAKK,cAAc0B,OAAO/B,KAAMuB,EAAUM,EAAWC,EAAWN,GAE3E,MAAOQ,GACH,GAAIhC,KAAKK,cAAc4B,YAAYjC,KAAMgC,GACrC,MAAMA,GAIlB,QACInB,EAAoBA,EAAkBf,QAG9CD,QAAQqC,EAAML,EAAWC,GACrB,GAAII,EAAKvB,MAAQX,KACb,MAAM,IAAIJ,MAAM,+DACXsC,EAAKvB,MAAQwB,GAAS/C,KAAO,gBAAkBY,KAAKZ,KAAO,KAKpE,GAAI8C,EAAKE,QAAUC,IAAiBH,EAAKI,OAASC,GAAaL,EAAKI,OAASE,GACzE,OAEJ,MAAMC,EAAeP,EAAKE,OAASM,EACnCD,GAAgBP,EAAKS,cAAcD,EAASE,GAC5CV,EAAKW,WACL,MAAMC,EAAe/B,EACrBA,EAAemB,EACfrB,EAAoB,CAAEf,OAAQe,EAAmBF,KAAMX,MACvD,IACQkC,EAAKI,MAAQE,GAAaN,EAAKa,OAASb,EAAKa,KAAKC,aAClDd,EAAKe,cAAWC,GAEpB,IACI,OAAOlD,KAAKK,cAAc8C,WAAWnD,KAAMkC,EAAML,EAAWC,GAEhE,MAAOE,GACH,GAAIhC,KAAKK,cAAc4B,YAAYjC,KAAMgC,GACrC,MAAMA,GAIlB,QAGQE,EAAKE,QAAUC,GAAgBH,EAAKE,QAAUgB,IAC1ClB,EAAKI,MAAQC,GAAcL,EAAKa,MAAQb,EAAKa,KAAKC,WAClDP,GAAgBP,EAAKS,cAAcC,EAAWF,IAG9CR,EAAKW,SAAW,EAChB7C,KAAKqD,iBAAiBnB,GAAO,GAC7BO,GACIP,EAAKS,cAAcN,EAAcK,EAASL,KAGtDxB,EAAoBA,EAAkBf,OACtCiB,EAAe+B,GAGvBjD,aAAaqC,GACT,GAAIA,EAAKvB,MAAQuB,EAAKvB,OAASX,KAAM,CAGjC,IAAIsD,EAAUtD,KACd,KAAOsD,GAAS,CACZ,GAAIA,IAAYpB,EAAKvB,KACjB,MAAMf,MAAM,8BAA8BI,KAAKZ,kDAAkD8C,EAAKvB,KAAKvB,QAE/GkE,EAAUA,EAAQxD,QAG1BoC,EAAKS,cAAcY,EAAYlB,GAC/B,MAAMmB,EAAgB,GACtBtB,EAAKuB,eAAiBD,EACtBtB,EAAKwB,MAAQ1D,KACb,IACIkC,EAAOlC,KAAKK,cAAcsD,aAAa3D,KAAMkC,GAEjD,MAAO0B,GAMH,MAHA1B,EAAKS,cAAcS,EAASG,EAAYlB,GAExCrC,KAAKK,cAAc4B,YAAYjC,KAAM4D,GAC/BA,EASV,OAPI1B,EAAKuB,iBAAmBD,GAExBxD,KAAKqD,iBAAiBnB,EAAM,GAE5BA,EAAKE,OAASmB,GACdrB,EAAKS,cAAcC,EAAWW,GAE3BrB,EAEXrC,kBAAkB2B,EAAQD,EAAUwB,EAAMc,GACtC,OAAO7D,KAAK2D,aAAa,IAAIG,EAASC,EAAWvC,EAAQD,EAAUwB,EAAMc,OAAgBX,IAE7FrD,kBAAkB2B,EAAQD,EAAUwB,EAAMc,EAAgBG,GACtD,OAAOhE,KAAK2D,aAAa,IAAIG,EAAStB,EAAWhB,EAAQD,EAAUwB,EAAMc,EAAgBG,IAE7FnE,kBAAkB2B,EAAQD,EAAUwB,EAAMc,EAAgBG,GACtD,OAAOhE,KAAK2D,aAAa,IAAIG,EAASvB,EAAWf,EAAQD,EAAUwB,EAAMc,EAAgBG,IAE7FnE,WAAWqC,GACP,GAAIA,EAAKvB,MAAQX,KACb,MAAM,IAAIJ,MAAM,qEACXsC,EAAKvB,MAAQwB,GAAS/C,KAAO,gBAAkBY,KAAKZ,KAAO,KACpE8C,EAAKS,cAAcsB,EAAWrB,EAAWF,GACzC,IACI1C,KAAKK,cAAc6D,WAAWlE,KAAMkC,GAExC,MAAO0B,GAIH,MAFA1B,EAAKS,cAAcS,EAASa,GAC5BjE,KAAKK,cAAc4B,YAAYjC,KAAM4D,GAC/BA,EAKV,OAHA5D,KAAKqD,iBAAiBnB,GAAO,GAC7BA,EAAKS,cAAcN,EAAc4B,GACjC/B,EAAKW,SAAW,EACTX,EAEXrC,iBAAiBqC,EAAMiC,GACnB,MAAMX,EAAgBtB,EAAKuB,gBACb,GAAVU,IACAjC,EAAKuB,eAAiB,MAE1B,IAAK,IAAIW,EAAI,EAAGA,EAAIZ,EAAca,OAAQD,IACtCZ,EAAcY,GAAGf,iBAAiBnB,EAAKI,KAAM6B,IAIzDzE,EAAKC,WAAaA,EAClB,MAAM2E,EAAc,CAChBlF,KAAM,GACNmF,UAAW,CAACC,EAAUC,EAAGC,EAAQC,IAAiBH,EAASI,QAAQF,EAAQC,GAC3EE,eAAgB,CAACL,EAAUC,EAAGC,EAAQxC,IAASsC,EAASb,aAAae,EAAQxC,GAC7E4C,aAAc,CAACN,EAAUC,EAAGC,EAAQxC,EAAML,EAAWC,IAAc0C,EAASrB,WAAWuB,EAAQxC,EAAML,EAAWC,GAChHiD,aAAc,CAACP,EAAUC,EAAGC,EAAQxC,IAASsC,EAASN,WAAWQ,EAAQxC,IAE7E,MAAM5B,EACFT,YAAYc,EAAMqE,EAAgBjF,GAC9BC,KAAKiF,YAAc,CAAElB,UAAa,EAAGvB,UAAa,EAAGD,UAAa,GAClEvC,KAAKW,KAAOA,EACZX,KAAKkF,gBAAkBF,EACvBhF,KAAKmF,QAAUpF,IAAaA,GAAYA,EAASqF,OAASrF,EAAWiF,EAAeG,SACpFnF,KAAKqF,UAAYtF,IAAaA,EAASqF,OAASJ,EAAiBA,EAAeK,WAChFrF,KAAKsF,cAAgBvF,IAAaA,EAASqF,OAASpF,KAAKW,KAAOqE,EAAerE,MAC/EX,KAAKuF,aACDxF,IAAaA,EAASyF,YAAczF,EAAWiF,EAAeO,cAClEvF,KAAKyF,eACD1F,IAAaA,EAASyF,YAAcR,EAAiBA,EAAeS,gBACxEzF,KAAK0F,mBACD3F,IAAaA,EAASyF,YAAcxF,KAAKW,KAAOqE,EAAerE,MACnEX,KAAK2F,UAAY5F,IAAaA,EAAS6F,SAAW7F,EAAWiF,EAAeW,WAC5E3F,KAAK6F,YACD9F,IAAaA,EAAS6F,SAAWZ,EAAiBA,EAAea,aACrE7F,KAAK8F,gBAAkB/F,IAAaA,EAAS6F,SAAW5F,KAAKW,KAAOqE,EAAerE,MACnFX,KAAK+F,eACDhG,IAAaA,EAASiG,cAAgBjG,EAAWiF,EAAee,gBACpE/F,KAAKiG,iBACDlG,IAAaA,EAASiG,cAAgBhB,EAAiBA,EAAeiB,kBAC1EjG,KAAKkG,qBACDnG,IAAaA,EAASiG,cAAgBhG,KAAKW,KAAOqE,EAAerE,MACrEX,KAAKmG,gBACDpG,IAAaA,EAAS8E,eAAiB9E,EAAWiF,EAAemB,iBACrEnG,KAAKoG,kBAAoBrG,IACpBA,EAAS8E,eAAiBG,EAAiBA,EAAeoB,mBAC/DpG,KAAKqG,sBACDtG,IAAaA,EAAS8E,eAAiB7E,KAAKW,KAAOqE,EAAerE,MACtEX,KAAKsG,cACDvG,IAAaA,EAAS+E,aAAe/E,EAAWiF,EAAesB,eACnEtG,KAAKuG,gBACDxG,IAAaA,EAAS+E,aAAeE,EAAiBA,EAAeuB,iBACzEvG,KAAKwG,oBACDzG,IAAaA,EAAS+E,aAAe9E,KAAKW,KAAOqE,EAAerE,MACpEX,KAAKyG,cACD1G,IAAaA,EAASgF,aAAehF,EAAWiF,EAAeyB,eACnEzG,KAAK0G,gBACD3G,IAAaA,EAASgF,aAAeC,EAAiBA,EAAe0B,iBACzE1G,KAAK2G,oBACD5G,IAAaA,EAASgF,aAAe/E,KAAKW,KAAOqE,EAAerE,MACpEX,KAAK4G,WAAa,KAClB5G,KAAK6G,aAAe,KACpB7G,KAAK8G,kBAAoB,KACzB9G,KAAK+G,iBAAmB,KACxB,MAAMC,EAAkBjH,GAAYA,EAASwE,UACvC0C,EAAgBjC,GAAkBA,EAAe4B,YACnDI,GAAmBC,KAGnBjH,KAAK4G,WAAaI,EAAkBjH,EAAWuE,EAC/CtE,KAAK6G,aAAe7B,EACpBhF,KAAK8G,kBAAoB9G,KACzBA,KAAK+G,iBAAmBpG,EACnBZ,EAAS8E,iBACV7E,KAAKmG,gBAAkB7B,EACvBtE,KAAKoG,kBAAoBpB,EACzBhF,KAAKqG,sBAAwBrG,KAAKW,MAEjCZ,EAAS+E,eACV9E,KAAKsG,cAAgBhC,EACrBtE,KAAKuG,gBAAkBvB,EACvBhF,KAAKwG,oBAAsBxG,KAAKW,MAE/BZ,EAASgF,eACV/E,KAAKyG,cAAgBnC,EACrBtE,KAAK0G,gBAAkB1B,EACvBhF,KAAK2G,oBAAsB3G,KAAKW,OAI5Cd,KAAKqH,EAAYnH,GACb,OAAOC,KAAKmF,QAAUnF,KAAKmF,QAAQC,OAAOpF,KAAKqF,UAAWrF,KAAKW,KAAMuG,EAAYnH,GAC7E,IAAIL,EAAKwH,EAAYnH,GAE7BF,UAAUqH,EAAY3F,EAAUC,GAC5B,OAAOxB,KAAKuF,aACRvF,KAAKuF,aAAaC,YAAYxF,KAAKyF,eAAgBzF,KAAK0F,mBAAoBwB,EAAY3F,EAAUC,GAClGD,EAER1B,OAAOqH,EAAY3F,EAAUM,EAAWC,EAAWN,GAC/C,OAAOxB,KAAK2F,UAAY3F,KAAK2F,UAAUC,SAAS5F,KAAK6F,YAAa7F,KAAK8F,gBAAiBoB,EAAY3F,EAAUM,EAAWC,EAAWN,GAChID,EAAS4F,MAAMtF,EAAWC,GAElCjC,YAAYqH,EAAYlF,GACpB,OAAOhC,KAAK+F,gBACR/F,KAAK+F,eAAeC,cAAchG,KAAKiG,iBAAkBjG,KAAKkG,qBAAsBgB,EAAYlF,GAGxGnC,aAAaqH,EAAYhF,GACrB,IAAIkF,EAAalF,EACjB,GAAIlC,KAAKmG,gBACDnG,KAAK4G,YACLQ,EAAW3D,eAAe4D,KAAKrH,KAAK8G,mBAExCM,EAAapH,KAAKmG,gBAAgBtB,eAAe7E,KAAKoG,kBAAmBpG,KAAKqG,sBAAuBa,EAAYhF,GAC5GkF,IACDA,EAAalF,QAGjB,GAAIA,EAAKoF,WACLpF,EAAKoF,WAAWpF,OAEf,CAAA,GAAIA,EAAKI,MAAQyB,EAIlB,MAAM,IAAInE,MAAM,+BAHhB2H,EAAkBrF,GAM1B,OAAOkF,EAEXvH,WAAWqH,EAAYhF,EAAML,EAAWC,GACpC,OAAO9B,KAAKsG,cAAgBtG,KAAKsG,cAAcxB,aAAa9E,KAAKuG,gBAAiBvG,KAAKwG,oBAAqBU,EAAYhF,EAAML,EAAWC,GACrII,EAAKX,SAAS4F,MAAMtF,EAAWC,GAEvCjC,WAAWqH,EAAYhF,GACnB,IAAIsF,EACJ,GAAIxH,KAAKyG,cACLe,EAAQxH,KAAKyG,cAAc1B,aAAa/E,KAAK0G,gBAAiB1G,KAAK2G,oBAAqBO,EAAYhF,OAEnG,CACD,IAAKA,EAAKe,SACN,MAAMrD,MAAM,0BAEhB4H,EAAQtF,EAAKe,SAASf,GAE1B,OAAOsF,EAEX3H,QAAQqH,EAAYO,GAGhB,IACIzH,KAAK4G,YACD5G,KAAK4G,WAAWrC,UAAUvE,KAAK6G,aAAc7G,KAAK+G,iBAAkBG,EAAYO,GAExF,MAAO7D,GACH5D,KAAKiC,YAAYiF,EAAYtD,IAGrC/D,iBAAiByC,EAAM6B,GACnB,MAAMuD,EAAS1H,KAAKiF,YACd0C,EAAOD,EAAOpF,GACdsF,EAAOF,EAAOpF,GAAQqF,EAAOxD,EACnC,GAAIyD,EAAO,EACP,MAAM,IAAIhI,MAAM,4CAEpB,GAAY,GAAR+H,GAAqB,GAARC,EAAW,CACxB,MAAMH,EAAU,CACZ1D,UAAW2D,EAAkB3D,UAAI,EACjCvB,UAAWkF,EAAkBlF,UAAI,EACjCD,UAAWmF,EAAkBnF,UAAI,EACjCsF,OAAQvF,GAEZtC,KAAK4E,QAAQ5E,KAAKW,KAAM8G,KAIpC,MAAM3D,EACFjE,YAAYyC,EAAMd,EAAQD,EAAUuG,EAASR,EAAYrE,GACrDjD,KAAK0D,MAAQ,KACb1D,KAAK6C,SAAW,EAChB7C,KAAKyD,eAAiB,KACtBzD,KAAK+H,OAAS,eACd/H,KAAKsC,KAAOA,EACZtC,KAAKwB,OAASA,EACdxB,KAAK+C,KAAO+E,EACZ9H,KAAKsH,WAAaA,EAClBtH,KAAKiD,SAAWA,EAChBjD,KAAKuB,SAAWA,EAChB,MAAMyG,EAAOhI,KAETsC,IAASC,GAAauF,GAAWA,EAAQG,KACzCjI,KAAK+B,OAAS+B,EAASX,WAGvBnD,KAAK+B,OAAS,WACV,OAAO+B,EAASX,WAAW+E,KAAKjJ,EAAQ+I,EAAMhI,KAAM4B,YAIhE/B,kBAAkBqC,EAAMwC,EAAQyD,GACvBjG,IACDA,EAAOlC,MAEXoI,IACA,IAEI,OADAlG,EAAKW,WACEX,EAAKvB,KAAK0H,QAAQnG,EAAMwC,EAAQyD,GAE3C,QACqC,GAA7BC,GACAE,IAEJF,KAGRzH,WACI,OAAOX,KAAK0D,MAEhBtB,YACI,OAAOpC,KAAK+H,OAEhBlI,wBACIG,KAAK2C,cAAcN,EAAckB,GAErC1D,cAAc0I,EAASC,EAAYC,GAC/B,GAAIzI,KAAK+H,SAAWS,GAAcxI,KAAK+H,SAAWU,EAO9C,MAAM,IAAI7I,MAAM,GAAGI,KAAKsC,SAAStC,KAAKwB,mCAAmC+G,wBAA8BC,KAAcC,EAAa,QAAWA,EAAa,IAAO,YAAYzI,KAAK+H,YANlL/H,KAAK+H,OAASQ,EACVA,GAAWlG,IACXrC,KAAKyD,eAAiB,MAOlC5D,WACI,OAAIG,KAAK+C,WAAsC,IAAvB/C,KAAK+C,KAAK2F,SACvB1I,KAAK+C,KAAK2F,SAASC,WAGnBC,OAAOC,UAAUF,SAAST,KAAKlI,MAK9CH,SACI,MAAO,CACHyC,KAAMtC,KAAKsC,KACXF,MAAOpC,KAAKoC,MACZZ,OAAQxB,KAAKwB,OACbb,KAAMX,KAAKW,KAAKvB,KAChByD,SAAU7C,KAAK6C,WAS3B,MAAMiG,EAAmBnJ,EAAW,cAC9BoJ,EAAgBpJ,EAAW,WAC3BqJ,EAAarJ,EAAW,QAC9B,IAEIsJ,EAFAC,EAAkB,GAClBC,GAA4B,EAEhC,SAAS5B,EAAkBrF,GAGvB,GAAkC,IAA9BkG,GAA8D,IAA3Bc,EAAgB7E,OAOnD,GALK4E,GACGhK,EAAO8J,KACPE,EAA8BhK,EAAO8J,GAAeK,QAAQ,IAGhEH,EAA6B,CAC7B,IAAII,EAAaJ,EAA4BD,GACxCK,IAGDA,EAAaJ,EAAkCK,MAEnDD,EAAWnB,KAAKe,EAA6BX,QAG7CrJ,EAAO6J,GAAkBR,EAAqB,GAGtDpG,GAAQgH,EAAgB7B,KAAKnF,GAEjC,SAASoG,IACL,IAAKa,EAA2B,CAE5B,IADAA,GAA4B,EACrBD,EAAgB7E,QAAQ,CAC3B,MAAMkF,EAAQL,EACdA,EAAkB,GAClB,IAAK,IAAI9E,EAAI,EAAGA,EAAImF,EAAMlF,OAAQD,IAAK,CACnC,MAAMlC,EAAOqH,EAAMnF,GACnB,IACIlC,EAAKvB,KAAK0H,QAAQnG,EAAM,KAAM,MAElC,MAAOF,GACHb,EAAKqI,iBAAiBxH,KAIlCb,EAAKsI,qBACLN,GAA4B,GAQpC,MAAMhH,EAAU,CAAE/C,KAAM,WAClBiD,EAAe,eAAgBkB,EAAa,aAAcX,EAAY,YAAaF,EAAU,UAAWuB,EAAY,YAAab,EAAU,UAC3IW,EAAY,YAAavB,EAAY,YAAaD,EAAY,YAC9D/B,EAAU,GACVW,EAAO,CACTuI,OAAQ/J,EACRgK,iBAAkB,IAAM9I,EACxB2I,iBAAkBI,EAClBH,mBAAoBG,EACpBrC,kBAAmBA,EACnBsC,kBAAmB,KAAOnK,EAAKC,EAAW,oCAC1CmK,iBAAkB,IAAM,GACxBC,kBAAmBH,EACnBI,YAAa,IAAMJ,EACnBK,cAAe,IAAM,GACrBC,UAAW,IAAMN,EACjBO,eAAgB,IAAMP,EACtBQ,iBAAmBC,IAIXA,GAAkD,mBAA1BA,EAAcjB,UACtCH,EAA8BoB,EAAcjB,QAAQ,KAG5DkB,oBAAqB,IAAMV,EAC3BW,WAAY,KAAM,EAClBC,iBAAkB,OAClBC,qBAAsB,IAAMb,EAC5Bc,+BAAgC,OAChCC,aAAc,OACdC,WAAY,IAAM,GAClBC,WAAY,IAAMjB,EAClBkB,oBAAqB,IAAMlB,EAC3BmB,iBAAkB,IAAM,GACxBC,sBAAuB,IAAMpB,EAC7BqB,kBAAmB,IAAMrB,EACzBsB,eAAgB,IAAMtB,GAE1B,IAAI/I,EAAoB,CAAEf,OAAQ,KAAMa,KAAM,IAAIjB,EAAK,KAAM,OACzDqB,EAAe,KACfqH,EAA4B,EAChC,SAASwB,KACT,SAASjK,EAAWP,GAChB,MAAO,kBAAoBA,EAE/BC,EAAmB,OAAQ,QACpBJ,EAAaS,KAAIA,EA/lBb,CAgmBM,oBAAXyL,QAA0BA,QAA0B,oBAATnD,MAAwBA,MAAQ/I,QASrFS,KAAK0L,aAAa,mBAAoB,CAACnM,EAAQS,EAAM2L,KACjD,MAAMX,EAAiC9B,OAAO0C,yBACxCb,EAAuB7B,OAAO2C,eAQpC,MAAM5L,EAAa0L,EAAI3B,OACjB8B,EAAyB,GACzBzC,EAAgBpJ,EAAW,WAC3BqJ,EAAarJ,EAAW,QAE9B0L,EAAI7B,iBAAoBiC,IACpB,GAAIJ,EAAIxB,oBAAqB,CACzB,MAAM6B,EAAYD,GAAKA,EAAEC,UACrBA,EACAC,QAAQ3J,MAAM,+BAAgC0J,aAAqB9L,MAAQ8L,EAAUE,QAAUF,EAAW,UAAWD,EAAE9K,KAAKvB,KAAM,UAAWqM,EAAEvJ,MAAQuJ,EAAEvJ,KAAKV,OAAQ,WAAYkK,EAAWA,aAAqB9L,MAAQ8L,EAAUG,WAAQ3I,GAG5OyI,QAAQ3J,MAAMyJ,KAI1BJ,EAAI5B,mBAAqB,KACrB,KAAO+B,EAAuBnH,QAC1B,KAAOmH,EAAuBnH,QAAQ,CAClC,MAAMyH,EAAuBN,EAAuBO,QACpD,IACID,EAAqBnL,KAAKgB,WAAW,KACjC,MAAMmK,IAGd,MAAO9J,GACHgK,EAAyBhK,MAKzC,MAAMiK,EAA6CtM,EAAW,oCAC9D,SAASqM,EAAyBP,GAC9BJ,EAAI7B,iBAAiBiC,GACrB,IACI,MAAMS,EAAUxM,EAAKuM,GACjBC,GAA8B,mBAAZA,GAClBA,EAAQhE,KAAKlI,KAAMyL,GAG3B,MAAO7H,KAGX,SAASuI,EAAW3E,GAChB,OAAOA,GAASA,EAAM8B,KAE1B,SAAS8C,EAAkB5E,GACvB,OAAOA,EAEX,SAAS6E,EAAiBX,GACtB,OAAOjL,EAAiB6L,OAAOZ,GAEnC,MAAMa,EAAc5M,EAAW,SACzB6M,EAAc7M,EAAW,SACzB8M,EAAgB9M,EAAW,WAC3B+M,EAA2B/M,EAAW,sBACtCgN,EAA2BhN,EAAW,sBAM5C,SAASiN,EAAaC,EAASzK,GAC3B,OAAQ0K,IACJ,IACIC,EAAeF,EAASzK,EAAO0K,GAEnC,MAAOlJ,GACHmJ,EAAeF,GAAS,EAAOjJ,KAK3C,MAaMoJ,EAA4BrN,EAAW,oBAE7C,SAASoN,EAAeF,EAASzK,EAAOoF,GACpC,MAAMyF,EAhBG,WACT,IAAIC,GAAY,EAChB,OAAO,SAAiBC,GACpB,OAAO,WACCD,IAGJA,GAAY,EACZC,EAAgBhG,MAAM,KAAMvF,cAR3B,GAiBT,GAAIiL,IAAYrF,EACZ,MAAM,IAAI4F,UANC,gCAQf,GAnCe,OAmCXP,EAAQN,GAA6B,CAErC,IAAIjD,EAAO,KACX,IACyB,iBAAV9B,GAAuC,mBAAVA,IACpC8B,EAAO9B,GAASA,EAAM8B,MAG9B,MAAO1F,GAIH,OAHAqJ,EAAY,KACRF,EAAeF,GAAS,EAAOjJ,IADnCqJ,GAGOJ,EAGX,IAhDS,IAgDLzK,GAAsBoF,aAAiB/G,GACvC+G,EAAMvG,eAAesL,IAAgB/E,EAAMvG,eAAeuL,IAnDnD,OAoDPhF,EAAM+E,GACNc,EAAqB7F,GACrBuF,EAAeF,EAASrF,EAAM+E,GAAc/E,EAAMgF,SAEjD,IAtDI,IAsDApK,GAAsC,mBAATkH,EAClC,IACIA,EAAKpB,KAAKV,EAAOyF,EAAYL,EAAaC,EAASzK,IAAS6K,EAAYL,EAAaC,GAAS,KAElG,MAAOjJ,GACHqJ,EAAY,KACRF,EAAeF,GAAS,EAAOjJ,IADnCqJ,OAKH,CACDJ,EAAQN,GAAenK,EACvB,MAAMmH,EAAQsD,EAAQL,GAatB,GAZAK,EAAQL,GAAehF,EACnBqF,EAAQJ,KAAmBA,IArE1B,IAuEGrK,IAGAyK,EAAQN,GAAeM,EAAQF,GAC/BE,EAAQL,GAAeK,EAAQH,KA1ElC,IA+EDtK,GAAsBoF,aAAiB5H,MAAO,CAE9C,MAAM0N,EAAQ5N,EAAKoB,aAAepB,EAAKoB,YAAYiC,MAC/CrD,EAAKoB,YAAYiC,KAAkBwK,kBACnCD,GAEA7C,EAAqBjD,EAAOwF,EAA2B,CAAEQ,cAAc,EAAMC,YAAY,EAAOC,UAAU,EAAMlG,MAAO8F,IAG/H,IAAK,IAAIlJ,EAAI,EAAGA,EAAImF,EAAMlF,QACtBsJ,EAAwBd,EAAStD,EAAMnF,KAAMmF,EAAMnF,KAAMmF,EAAMnF,KAAMmF,EAAMnF,MAE/E,GAAoB,GAAhBmF,EAAMlF,QA3FL,GA2FoBjC,EAAmB,CACxCyK,EAAQN,GA3FE,EA4FV,IAEI,MAAM,IAAI3M,MAAM,0BAlKpC,SAAgCgO,GAC5B,GAAIA,GAAOA,EAAIjF,WAAaC,OAAOC,UAAUF,SAAU,CACnD,MAAMkF,EAAYD,EAAIE,aAAeF,EAAIE,YAAY1O,KACrD,OAAQyO,GAAwB,IAAM,KAAOE,KAAKC,UAAUJ,GAEhE,OAAOA,EAAMA,EAAIjF,WAAaC,OAAOC,UAAUF,SAAST,KAAK0F,GALjE,CAkKuFpG,IAC9DA,GAASA,EAAMqE,MAAQ,KAAOrE,EAAMqE,MAAQ,KAErD,MAAOjI,GACH,MAAM5B,EAAQ4B,EACd5B,EAAM0J,UAAYlE,EAClBxF,EAAM6K,QAAUA,EAChB7K,EAAMrB,KAAOjB,EAAKkB,QAClBoB,EAAME,KAAOxC,EAAKoB,YAClB0K,EAAuBnE,KAAKrF,GAC5BqJ,EAAI9D,uBAMpB,OAAOsF,EAEX,MAAMoB,EAA4BtO,EAAW,2BAC7C,SAAS0N,EAAqBR,GAC1B,GAlHsB,IAkHlBA,EAAQN,GAAoC,CAM5C,IACI,MAAML,EAAUxM,EAAKuO,GACjB/B,GAA8B,mBAAZA,GAClBA,EAAQhE,KAAKlI,KAAM,CAAE0L,UAAWmB,EAAQL,GAAcK,QAASA,IAGvE,MAAOjJ,IAEPiJ,EAAQN,IAjIC,EAkIT,IAAK,IAAInI,EAAI,EAAGA,EAAIoH,EAAuBnH,OAAQD,IAC3CyI,IAAYrB,EAAuBpH,GAAGyI,SACtCrB,EAAuB0C,OAAO9J,EAAG,IAKjD,SAASuJ,EAAwBd,EAASlM,EAAMwN,EAAcC,EAAaC,GACvEhB,EAAqBR,GACrB,MAAMyB,EAAezB,EAAQN,GACvB/H,EAAW8J,EACW,mBAAhBF,EAA8BA,EAAchC,EAC7B,mBAAfiC,EAA6BA,EAAahC,EACtD1L,EAAK4G,kBAlJM,eAkJoB,KAC3B,IACI,MAAMgH,EAAqB1B,EAAQL,GAC7BgC,EAAmBL,GAAgB1B,IAAkB0B,EAAa1B,GACpE+B,IAEAL,EAAazB,GAA4B6B,EACzCJ,EAAaxB,GAA4B2B,GAG7C,MAAM9G,EAAQ7G,EAAK8N,IAAIjK,OAAUtB,EAAWsL,GAAoBhK,IAAa6H,GAAoB7H,IAAa4H,EAC1G,GACA,CAACmC,IACLxB,EAAeoB,GAAc,EAAM3G,GAEvC,MAAOxF,GAEH+K,EAAeoB,GAAc,EAAOnM,KAEzCmM,GAGP,MAAM1N,EACFZ,YAAY6O,GACR,MAAM7B,EAAU7M,KAChB,KAAM6M,aAAmBpM,GACrB,MAAM,IAAIb,MAAM,kCAEpBiN,EAAQN,GA7KG,KA8KXM,EAAQL,GAAe,GACvB,IACIkC,GAAYA,EAAS9B,EAAaC,GA/K7B,GA+KiDD,EAAaC,GA9K9D,IAgLT,MAAO7K,GACH+K,EAAeF,GAAS,EAAO7K,IAGvCnC,kBACI,MAjB6B,gDAmBjCA,eAAe2H,GACX,OAAOuF,EAAe,IAAI/M,KAAK,OAzLtB,EAyLuCwH,GAEpD3H,cAAcmC,GACV,OAAO+K,EAAe,IAAI/M,KAAK,OA3LtB,EA2LuCgC,GAEpDnC,YAAY8O,GACR,IAAIvF,EACAkD,EACAO,EAAU,IAAI7M,KAAK,CAAC4O,EAAKC,KACzBzF,EAAUwF,EACVtC,EAASuC,IAEb,SAASC,EAAUtH,GACf4B,EAAQ5B,GAEZ,SAASuH,EAAS/M,GACdsK,EAAOtK,GAEX,IAAK,IAAIwF,KAASmH,EACTxC,EAAW3E,KACZA,EAAQxH,KAAKoJ,QAAQ5B,IAEzBA,EAAM8B,KAAKwF,EAAWC,GAE1B,OAAOlC,EAEXhN,WAAW8O,GACP,IAAIvF,EACAkD,EACAO,EAAU,IAAI7M,KAAK,CAAC4O,EAAKC,KACzBzF,EAAUwF,EACVtC,EAASuC,IAGTG,EAAkB,EAClBC,EAAa,EACjB,MAAMC,EAAiB,GACvB,IAAK,IAAI1H,KAASmH,EAAQ,CACjBxC,EAAW3E,KACZA,EAAQxH,KAAKoJ,QAAQ5B,IAEzB,MAAM2H,EAAgBF,EACtBzH,EAAM8B,KAAM9B,IACR0H,EAAeC,GAAiB3H,EAChCwH,IACwB,IAApBA,GACA5F,EAAQ8F,IAEb5C,GACH0C,IACAC,IAOJ,OAJAD,GAAmB,EACK,IAApBA,GACA5F,EAAQ8F,GAELrC,EAEXuC,IAAKC,OAAOC,eACR,MAAO,UAEXzP,KAAKuO,EAAaC,GACd,MAAMF,EAAe,IAAInO,KAAK8N,YAAY,MACpCnN,EAAOjB,EAAKkB,QAOlB,OAjQW,MA2PPZ,KAAKuM,GACLvM,KAAKwM,GAAanF,KAAK1G,EAAMwN,EAAcC,EAAaC,GAGxDV,EAAwB3N,KAAMW,EAAMwN,EAAcC,EAAaC,GAE5DF,EAEXtO,MAAMwO,GACF,OAAOrO,KAAKsJ,KAAK,KAAM+E,GAE3BxO,QAAQ0P,GACJ,MAAMpB,EAAe,IAAInO,KAAK8N,YAAY,MAC1CK,EAAa1B,GAAiBA,EAC9B,MAAM9L,EAAOjB,EAAKkB,QAOlB,OAhRW,MA0QPZ,KAAKuM,GACLvM,KAAKwM,GAAanF,KAAK1G,EAAMwN,EAAcoB,EAAWA,GAGtD5B,EAAwB3N,KAAMW,EAAMwN,EAAcoB,EAAWA,GAE1DpB,GAKf1N,EAA0B2I,QAAI3I,EAAiB2I,QAC/C3I,EAAyB6L,OAAI7L,EAAiB6L,OAC9C7L,EAAuB+O,KAAI/O,EAAiB+O,KAC5C/O,EAAsBgP,IAAIhP,EAAiBgP,IAC3C,MAAMpF,EAAgBpL,EAAO8J,GAAiB9J,EAAgBsB,QACxDmP,EAAqBhQ,EAAKC,WAAW,oBAC3C,IAAIgQ,EAAOjF,EAA+BzL,EAAQ,WAC7C0Q,IAAQA,EAAKnC,eACdmC,UAAeA,EAAKjC,SACpBiC,UAAeA,EAAKnI,MACfmI,IACDA,EAAO,CAAEnC,cAAc,EAAMC,YAAY,IAE7CkC,EAAKP,IAAM,WAGP,OAAOnQ,EAAOyQ,GAAsBzQ,EAAOyQ,GAAsBzQ,EAAO8J,IAE5E4G,EAAKC,IAAM,SAAUC,GACbA,IAAqBpP,EAGrBxB,EAAOyQ,GAAsBG,GAU7B5Q,EAAO8J,GAAiB8G,EACnBA,EAAiBhH,UAAUG,IAC5BkB,EAAU2F,GAEdxE,EAAIjB,iBAAiByF,KAG7BpF,EAAqBxL,EAAQ,UAAW0Q,IAE5C1Q,EAAgBsB,QAAIE,EACpB,MAAMqP,EAAoBnQ,EAAW,eACrC,SAASuK,EAAU6F,GACf,MAAMC,EAAQD,EAAKlH,UACboH,EAAOvF,EAA+BsF,EAAO,QACnD,GAAIC,KAA2B,IAAlBA,EAAKvC,WAAuBuC,EAAKzC,cAG1C,OAEJ,MAAM0C,EAAeF,EAAM1G,KAE3B0G,EAAMhH,GAAckH,EACpBH,EAAKlH,UAAUS,KAAO,SAAUwF,EAAWC,GAIvC,OAHgB,IAAItO,EAAiB,CAAC2I,EAASkD,KAC3C4D,EAAahI,KAAKlI,KAAMoJ,EAASkD,KAEtBhD,KAAKwF,EAAWC,IAEnCgB,EAAKD,IAAqB,EAgB9B,GAdAzE,EAAInB,UAAYA,EAcZG,EAAe,CACfH,EAAUG,GACV,MAAM8F,EAAQlR,EAAckR,MACR,mBAATA,IACPlR,EAAOoM,EAAI3B,OAAO,UAAYyG,EAC9BlR,EAAckR,OAlBLnP,EAkBiBmP,EAjBvB,WACH,IAAIC,EAAgBpP,EAAGmG,MAAMnH,KAAM4B,WACnC,GAAIwO,aAAyB3P,EACzB,OAAO2P,EAEX,IAAIC,EAAOD,EAActC,YAIzB,OAHKuC,EAAKP,IACN5F,EAAUmG,GAEPD,KAVf,IAAiBpP,EAuBjB,OADAT,QAAQb,EAAKC,WAAW,0BAA4B6L,EAC7C/K,IAiBX,MAAMiK,EAAiC9B,OAAO0C,yBAExCb,EAAuB7B,OAAO2C,eAE9B+E,EAAuB1H,OAAO2H,eAE9B5F,EAAe/B,OAAO4H,OAEtB5F,EAAa6F,MAAM5H,UAAU6H,MAM7BC,EAAiCjR,KAAKC,WAJb,oBAMzBiR,EAAoClR,KAAKC,WAJb,uBAWlC,SAASmL,EAAoBvJ,EAAUC,GACnC,OAAO9B,KAAKkB,QAAQiQ,KAAKtP,EAAUC,GAEvC,SAASsP,EAAiCtP,EAAQD,EAAUwB,EAAMc,EAAgBG,GAC9E,OAAOtE,KAAKkB,QAAQmQ,kBAAkBvP,EAAQD,EAAUwB,EAAMc,EAAgBG,GAElF,MAAMgN,EAAatR,KAAKC,WAClBsR,EAAmC,oBAAX9F,OACxB+F,EAAiBD,EAAiB9F,YAASjI,EAC3CiO,EAAUF,GAAkBC,GAAkC,iBAATlJ,MAAqBA,MAAQ/I,OAElFmS,EAAqB,CAAC,MAC5B,SAASnH,EAAc9B,EAAM3G,GACzB,IAAK,IAAI4C,EAAI+D,EAAK9D,OAAS,EAAGD,GAAK,EAAGA,IACX,mBAAZ+D,EAAK/D,KACZ+D,EAAK/D,GAAK0G,EAAoB3C,EAAK/D,GAAI5C,EAAS,IAAM4C,IAG9D,OAAO+D,EAsBX,SAASkJ,EAAmBC,GACxB,OAAKA,IAGyB,IAA1BA,EAAa5D,YAGoB,mBAArB4D,EAAalC,UAAkD,IAArBkC,EAAa1B,KAE3E,MAAM2B,EAA4C,oBAAtBC,mBAAqCxJ,gBAAgBwJ,kBAG3EC,IAAY,OAAQN,SAAuC,IAApBA,EAAQO,SACX,qBAAtC,GAAG/I,SAAST,KAAKiJ,EAAQO,SACvBC,GAAaF,IAAWF,MAAkBN,IAAkBC,EAA4BU,aAIxFC,OAAmC,IAApBV,EAAQO,SACa,qBAAtC,GAAG/I,SAAST,KAAKiJ,EAAQO,WAAoCH,MAC1DN,IAAkBC,EAA4BU,aAC/CE,EAAuB,GACvBC,EAAS,SAAUC,GAIrB,KADAA,EAAQA,GAASb,EAAQa,OAErB,OAEJ,IAAIC,EAAkBH,EAAqBE,EAAM1P,MAC5C2P,IACDA,EAAkBH,EAAqBE,EAAM1P,MAAQ0O,EAAW,cAAgBgB,EAAM1P,OAE1F,MAAMoC,EAAS1E,MAAQgS,EAAMtN,QAAUyM,EACjCe,EAAWxN,EAAOuN,GACxB,IAAIE,EACJ,GAAIR,GAAajN,IAAWwM,GAAiC,UAAfc,EAAM1P,KAAkB,CAIlE,MAAM8P,EAAaJ,EACnBG,EAASD,GACLA,EAAShK,KAAKlI,KAAMoS,EAAWxG,QAASwG,EAAWC,SAAUD,EAAWE,OAAQF,EAAWG,MAAOH,EAAWpQ,QAClG,IAAXmQ,GACAH,EAAMQ,sBAIVL,EAASD,GAAYA,EAAS/K,MAAMnH,KAAM4B,WAC5BsB,MAAViP,GAAwBA,GACxBH,EAAMQ,iBAGd,OAAOL,GAEX,SAASM,EAAc7E,EAAKqC,EAAMpH,GAC9B,IAAI8G,EAAOjF,EAA+BkD,EAAKqC,GAC/C,IAAKN,GAAQ9G,EAAW,CAEE6B,EAA+B7B,EAAWoH,KAE5DN,EAAO,CAAElC,YAAY,EAAMD,cAAc,IAKjD,IAAKmC,IAASA,EAAKnC,aACf,OAEJ,MAAMkF,EAAsB1B,EAAW,KAAOf,EAAO,WACrD,GAAIrC,EAAI3M,eAAeyR,IAAwB9E,EAAI8E,GAC/C,cAOG/C,EAAKjC,gBACLiC,EAAKnI,MACZ,MAAMmL,EAAkBhD,EAAKP,IACvBwD,EAAkBjD,EAAKC,IAEvBiD,EAAY5C,EAAK6C,OAAO,GAC9B,IAAIb,EAAkBH,EAAqBe,GACtCZ,IACDA,EAAkBH,EAAqBe,GAAa7B,EAAW,cAAgB6B,IAEnFlD,EAAKC,IAAM,SAAUmD,GAGjB,IAAIrO,EAAS1E,KACR0E,GAAUkJ,IAAQuD,IACnBzM,EAASyM,GAERzM,IAGeA,EAAOuN,IAEvBvN,EAAOsO,oBAAoBH,EAAWd,GAItCa,GACAA,EAAgBzL,MAAMzC,EAAQ0M,GAEV,mBAAb2B,GACPrO,EAAOuN,GAAmBc,EAC1BrO,EAAOuO,iBAAiBJ,EAAWd,GAAQ,IAG3CrN,EAAOuN,GAAmB,OAKlCtC,EAAKP,IAAM,WAGP,IAAI1K,EAAS1E,KAIb,GAHK0E,GAAUkJ,IAAQuD,IACnBzM,EAASyM,IAERzM,EACD,OAAO,KAEX,MAAMwN,EAAWxN,EAAOuN,GACxB,GAAIC,EACA,OAAOA,EAEN,GAAIS,EAAiB,CAOtB,IAAInL,EAAQmL,GAAmBA,EAAgBzK,KAAKlI,MACpD,GAAIwH,EAKA,OAJAmI,EAAKC,IAAI1H,KAAKlI,KAAMwH,GACoB,mBAA7B9C,EAAuBwO,iBAC9BxO,EAAOwO,gBAAgBjD,GAEpBzI,EAGf,OAAO,MAEXiD,EAAqBmD,EAAKqC,EAAMN,GAChC/B,EAAI8E,IAAuB,EAE/B,SAAS3I,EAAkB6D,EAAKxN,EAAYyI,GACxC,GAAIzI,EACA,IAAK,IAAIgE,EAAI,EAAGA,EAAIhE,EAAWiE,OAAQD,IACnCqO,EAAc7E,EAAK,KAAOxN,EAAWgE,GAAIyE,OAG5C,CACD,MAAMsK,EAAe,GACrB,IAAK,MAAMlD,KAAQrC,EACU,MAArBqC,EAAK6C,OAAO,EAAG,IACfK,EAAa9L,KAAK4I,GAG1B,IAAK,IAAImD,EAAI,EAAGA,EAAID,EAAa9O,OAAQ+O,IACrCX,EAAc7E,EAAKuF,EAAaC,GAAIvK,IAIhD,MAAMwK,EAAsBrC,EAAW,oBAEvC,SAASnG,EAAWgD,GAChB,MAAMyF,EAAgBnC,EAAQtD,GAC9B,IAAKyF,EACD,OAEJnC,EAAQH,EAAWnD,IAAcyF,EACjCnC,EAAQtD,GAAa,WACjB,MAAM0F,EAAItJ,EAAcrI,UAAWiM,GACnC,OAAQ0F,EAAElP,QACN,KAAK,EACDrE,KAAKqT,GAAuB,IAAIC,EAChC,MACJ,KAAK,EACDtT,KAAKqT,GAAuB,IAAIC,EAAcC,EAAE,IAChD,MACJ,KAAK,EACDvT,KAAKqT,GAAuB,IAAIC,EAAcC,EAAE,GAAIA,EAAE,IACtD,MACJ,KAAK,EACDvT,KAAKqT,GAAuB,IAAIC,EAAcC,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAC5D,MACJ,KAAK,EACDvT,KAAKqT,GAAuB,IAAIC,EAAcC,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAClE,MACJ,QACI,MAAM,IAAI3T,MAAM,wBAI5BoL,EAAsBmG,EAAQtD,GAAYyF,GAC1C,MAAME,EAAW,IAAIF,GAAAA,eACrB,IAAIrD,EACJ,IAAKA,KAAQuD,EAES,mBAAd3F,GAA2C,iBAAToC,GAErC,SAAUA,GACuB,mBAAnBuD,EAASvD,GAChBkB,EAAQtD,GAAWhF,UAAUoH,GAAQ,WACjC,OAAOjQ,KAAKqT,GAAqBpD,GAAM9I,MAAMnH,KAAKqT,GAAsBzR,YAI5E6I,EAAqB0G,EAAQtD,GAAWhF,UAAWoH,EAAM,CACrDL,IAAK,SAAU5O,GACO,mBAAPA,GACPhB,KAAKqT,GAAqBpD,GAAQnF,EAAoB9J,EAAI6M,EAAY,IAAMoC,GAI5EjF,EAAsBhL,KAAKqT,GAAqBpD,GAAOjP,IAGvDhB,KAAKqT,GAAqBpD,GAAQjP,GAG1CoO,IAAK,WACD,OAAOpP,KAAKqT,GAAqBpD,MArBhD,CAyBCA,GAEN,IAAKA,KAAQqD,EACI,cAATrD,GAAwBqD,EAAcrS,eAAegP,KACrDkB,EAAQtD,GAAWoC,GAAQqD,EAAcrD,IA6BrD,SAASjG,EAAYtF,EAAQtF,EAAMqU,GAC/B,IAAIzD,EAAQtL,EACZ,KAAOsL,IAAUA,EAAM/O,eAAe7B,IAClC4Q,EAAQM,EAAqBN,IAE5BA,GAAStL,EAAOtF,KAEjB4Q,EAAQtL,GAEZ,MAAMgP,EAAe1C,EAAW5R,GAChC,IAAIoF,EAAW,KACf,GAAIwL,KAAWxL,EAAWwL,EAAM0D,IAAgB,CAK5C,GAJAlP,EAAWwL,EAAM0D,GAAgB1D,EAAM5Q,GAInCiS,EADSrB,GAAStF,EAA+BsF,EAAO5Q,IAC9B,CAC1B,MAAMuU,EAAgBF,EAAQjP,EAAUkP,EAActU,GACtD4Q,EAAM5Q,GAAQ,WACV,OAAOuU,EAAc3T,KAAM4B,YAE/BoJ,EAAsBgF,EAAM5Q,GAAOoF,IAM3C,OAAOA,EAGX,SAAS2F,EAAeyD,EAAKgG,EAAUC,GACnC,IAAIC,EAAY,KAChB,SAASnQ,EAAazB,GAClB,MAAMa,EAAOb,EAAKa,KAKlB,OAJAA,EAAKoF,KAAKpF,EAAKgR,OAAS,WACpB7R,EAAKH,OAAOoF,MAAMnH,KAAM4B,YAE5BkS,EAAU3M,MAAMpE,EAAK2B,OAAQ3B,EAAKoF,MAC3BjG,EAEX4R,EAAY9J,EAAY4D,EAAKgG,EAAWpP,GAAa,SAAUwD,EAAMG,GACjE,MAAM6L,EAAOH,EAAY7L,EAAMG,GAC/B,OAAI6L,EAAKD,OAAS,GAAiC,mBAArB5L,EAAK6L,EAAKD,OAC7BjD,EAAiCkD,EAAK5U,KAAM+I,EAAK6L,EAAKD,OAAQC,EAAMrQ,GAIpEa,EAAS2C,MAAMa,EAAMG,KAKxC,SAAS6C,EAAsBiJ,EAASC,GACpCD,EAAQjD,EAAW,qBAAuBkD,EAE9C,IAAIC,GAAqB,EACrBC,GAAW,EACf,SAASC,IACL,IACI,MAAMC,EAAKpD,EAAeqD,UAAUC,UACpC,IAA6B,IAAzBF,EAAGG,QAAQ,WAA+C,IAA5BH,EAAGG,QAAQ,YACzC,OAAO,EAGf,MAAOzS,IAEP,OAAO,EAEX,SAASuI,IACL,GAAI4J,EACA,OAAOC,EAEXD,GAAqB,EACrB,IACI,MAAMG,EAAKpD,EAAeqD,UAAUC,WACP,IAAzBF,EAAGG,QAAQ,WAA+C,IAA5BH,EAAGG,QAAQ,cAA+C,IAAzBH,EAAGG,QAAQ,WAC1EL,GAAW,GAGnB,MAAOpS,IAEP,OAAOoS,EAYX1U,KAAK0L,aAAa,WAAanM,IAE3B,MAAMyV,EAA2BC,SAAS9L,UAAUF,SAC9CiM,EAA2B5D,EAAW,oBACtC6D,EAAiB7D,EAAW,WAC5B8D,EAAe9D,EAAW,SAC1B+D,EAAsB,WACxB,GAAoB,mBAAT/U,KAAqB,CAC5B,MAAMgV,EAAmBhV,KAAK4U,GAC9B,GAAII,EACA,MAAgC,mBAArBA,EACAN,EAAyBxM,KAAK8M,GAG9BpM,OAAOC,UAAUF,SAAST,KAAK8M,GAG9C,GAAIhV,OAASO,QAAS,CAClB,MAAM0U,EAAgBhW,EAAO4V,GAC7B,GAAII,EACA,OAAOP,EAAyBxM,KAAK+M,GAG7C,GAAIjV,OAASJ,MAAO,CAChB,MAAMsV,EAAcjW,EAAO6V,GAC3B,GAAII,EACA,OAAOR,EAAyBxM,KAAKgN,IAIjD,OAAOR,EAAyBxM,KAAKlI,OAEzC+U,EAAoBH,GAA4BF,EAChDC,SAAS9L,UAAUF,SAAWoM,EAE9B,MAAMI,EAAyBvM,OAAOC,UAAUF,SAEhDC,OAAOC,UAAUF,SAAW,WACxB,OAAI3I,gBAAgBO,QAFS,mBAKtB4U,EAAuBjN,KAAKlI,SAe3C,IAAIoV,GAAmB,EACvB,GAAsB,oBAAXjK,OACP,IACI,MAAMrD,EAAUc,OAAO2C,eAAe,GAAI,UAAW,CACjD6D,IAAK,WACDgG,GAAmB,KAG3BjK,OAAO8H,iBAAiB,OAAQnL,EAASA,GACzCqD,OAAO6H,oBAAoB,OAAQlL,EAASA,GAEhD,MAAOlE,IACHwR,GAAmB,EAI3B,MAAMC,EAAiC,CACnCpN,MAAM,GAEJqN,EAAyB,GACzBC,EAAgB,GAChBC,EAAyB,qCAE/B,SAAS1L,EAAiBqH,EAASsE,EAAMC,GACrC,MAAMC,EAAsBD,GAAgBA,EAAaE,KA5e9B,mBA6erBC,EAAyBH,GAAgBA,EAAaI,IA3e9B,sBA4exBC,EAA4BL,GAAgBA,EAAaM,WAAc,iBACvEC,EAAuCP,GAAgBA,EAAaQ,OAAU,qBAC9EC,EAA6BnF,EAAW2E,GACxCS,EAA4B,IAAMT,EAAqB,IAGvDxS,EAAa,SAAUjB,EAAMwC,EAAQsN,GAGvC,GAAI9P,EAAKmU,UACL,OAEJ,MAAM7R,EAAWtC,EAAKX,SACE,iBAAbiD,GAAyBA,EAAS8R,cAEzCpU,EAAKX,SAAYyQ,GAAUxN,EAAS8R,YAAYtE,GAChD9P,EAAK8S,iBAAmBxQ,GAG5BtC,EAAKH,OAAOG,EAAMwC,EAAQ,CAACsN,IAC3B,MAAMlK,EAAU5F,EAAK4F,QACrB,GAAIA,GAA8B,iBAAZA,GAAwBA,EAAQyO,KAAM,CAIxD,MAAM/R,EAAWtC,EAAK8S,iBAAmB9S,EAAK8S,iBAAmB9S,EAAKX,SACtEmD,EAAOmR,GAAuB3N,KAAKxD,EAAQsN,EAAM1P,KAAMkC,EAAUsD,KAInE0O,EAA0B,SAAUxE,GAItC,KADAA,EAAQA,GAASb,EAAQa,OAErB,OAIJ,MAAMtN,EAAS1E,MAAQgS,EAAMtN,QAAUyM,EACjCsF,EAAQ/R,EAAO4Q,EAAuBtD,EAAM1P,MAAeoU,OACjE,GAAID,EAGA,GAAqB,IAAjBA,EAAMpS,OACNlB,EAAWsT,EAAM,GAAI/R,EAAQsN,OAE5B,CAID,MAAM2E,EAAYF,EAAM/F,QACxB,IAAK,IAAItM,EAAI,EAAGA,EAAIuS,EAAUtS,UACtB2N,IAAiD,IAAxCA,EAAkC4E,mCADbxS,IAIlCjB,EAAWwT,EAAUvS,GAAIM,EAAQsN,KAM3C6E,EAAiC,SAAU7E,GAI7C,KADAA,EAAQA,GAASb,EAAQa,OAErB,OAIJ,MAAMtN,EAAS1E,MAAQgS,EAAMtN,QAAUyM,EACjCsF,EAAQ/R,EAAO4Q,EAAuBtD,EAAM1P,MAAcwU,MAChE,GAAIL,EAGA,GAAqB,IAAjBA,EAAMpS,OACNlB,EAAWsT,EAAM,GAAI/R,EAAQsN,OAE5B,CAID,MAAM2E,EAAYF,EAAM/F,QACxB,IAAK,IAAItM,EAAI,EAAGA,EAAIuS,EAAUtS,UACtB2N,IAAiD,IAAxCA,EAAkC4E,mCADbxS,IAIlCjB,EAAWwT,EAAUvS,GAAIM,EAAQsN,KAKjD,SAAS+E,EAAwBnJ,EAAK8H,GAClC,IAAK9H,EACD,OAAO,EAEX,IAAIoJ,GAAoB,EACpBtB,QAAsCxS,IAAtBwS,EAAazN,OAC7B+O,EAAoBtB,EAAazN,MAErC,MAAMgP,EAAkBvB,GAAgBA,EAAawB,GACrD,IAAI1X,GAAiB,EACjBkW,QAAwCxS,IAAxBwS,EAAayB,SAC7B3X,EAAiBkW,EAAayB,QAElC,IAAIC,GAAe,EACf1B,QAAoCxS,IAApBwS,EAAa2B,KAC7BD,EAAe1B,EAAa2B,IAEhC,IAAIrH,EAAQpC,EACZ,KAAOoC,IAAUA,EAAM/O,eAAe0U,IAClC3F,EAAQM,EAAqBN,GAMjC,IAJKA,GAASpC,EAAI+H,KAEd3F,EAAQpC,IAEPoC,EACD,OAAO,EAEX,GAAIA,EAAMmG,GACN,OAAO,EAEX,MAAMmB,EAAoB5B,GAAgBA,EAAa4B,kBAGjDC,EAAW,GACXC,EAAyBxH,EAAMmG,GAA8BnG,EAAM2F,GACnE8B,EAA4BzH,EAAMgB,EAAW6E,IAC/C7F,EAAM6F,GACJ6B,EAAkB1H,EAAMgB,EAAW+E,IACrC/F,EAAM+F,GACJ4B,EAA2B3H,EAAMgB,EAAWiF,IAC9CjG,EAAMiG,GACV,IAAI2B,EAKJ,SAASC,EAAe3V,GACfkT,GAAgD,kBAArBmC,EAASzP,cACT,IAArByP,EAASzP,SAAgD,OAArByP,EAASzP,UAKpD5F,EAAK4F,UAAYyP,EAASzP,QAAQgQ,QAClCP,EAASzP,QAAU5F,EAAK4F,SAZ5B4N,GAAgBA,EAAaqC,UAC7BH,EAA6B5H,EAAMgB,EAAW0E,EAAaqC,UACvD/H,EAAM0F,EAAaqC,UAa3B,MAkDMC,EAAwB,SAAU9V,GACpC,OAAO0V,EAA2B1P,KAAKqP,EAAS7S,OAAQ6S,EAAS1E,UAAW3Q,EAAKH,OAAQwV,EAASzP,UAKhGjE,EAAiBmT,EAxDM,SAAU9U,GAGnC,IAAIqV,EAASU,WAIb,OADAJ,EAAe3V,GACRsV,EAAuBtP,KAAKqP,EAAS7S,OAAQ6S,EAAS1E,UAAW0E,EAASO,QAAUjB,EAAiCL,EAAyBe,EAASzP,UAuClI,SAAU5F,GAEtC,OADA2V,EAAe3V,GACRsV,EAAuBtP,KAAKqP,EAAS7S,OAAQ6S,EAAS1E,UAAW3Q,EAAKH,OAAQwV,EAASzP,UAS5F9D,EAAegT,EAhDM,SAAU9U,GAIjC,IAAKA,EAAKmU,UAAW,CACjB,MAAM6B,EAAmB5C,EAAuBpT,EAAK2Q,WACrD,IAAIsF,EACAD,IACAC,EAAkBD,EAAiBhW,EAAK4V,QA9oB3C,OAEC,UA8oBF,MAAMM,EAAgBD,GAAmBjW,EAAKwC,OAAOyT,GACrD,GAAIC,EACA,IAAK,IAAIhU,EAAI,EAAGA,EAAIgU,EAAc/T,OAAQD,IAAK,CAE3C,GADqBgU,EAAchU,KACdlC,EAAM,CACvBkW,EAAclK,OAAO9J,EAAG,GAExBlC,EAAKmU,WAAY,EACY,IAAzB+B,EAAc/T,SAGdnC,EAAKmW,YAAa,EAClBnW,EAAKwC,OAAOyT,GAAmB,MAEnC,QAQhB,GAAKjW,EAAKmW,WAGV,OAAOZ,EAA0BvP,KAAKhG,EAAKwC,OAAQxC,EAAK2Q,UAAW3Q,EAAK4V,QAAUjB,EAAiCL,EAAyBtU,EAAK4F,UASvH,SAAU5F,GACpC,OAAOuV,EAA0BvP,KAAKhG,EAAKwC,OAAQxC,EAAK2Q,UAAW3Q,EAAKH,OAAQG,EAAK4F,UASnFwQ,EAAW5C,GAAgBA,EAAa6C,KAAQ7C,EAAa6C,KAL7B,SAAUrW,EAAMsC,GAClD,MAAMgU,SAAwBhU,EAC9B,MAA2B,aAAnBgU,GAAiCtW,EAAKX,WAAaiD,GACnC,WAAnBgU,GAA+BtW,EAAK8S,mBAAqBxQ,GAG5DiU,EAAoB/Y,KAAKA,KAAKC,WAAW,wBACzC+Y,EAAkB,SAAUC,EAAgBC,EAAWC,EAAkBC,EAAgB1B,GAAe,EAAOW,GAAU,GAC3H,OAAO,WACH,MAAMrT,EAAS1E,MAAQmR,EACjB0B,EAAYjR,UAAU,GAC5B,IAAI4C,EAAW5C,UAAU,GACzB,IAAK4C,EACD,OAAOmU,EAAexR,MAAMnH,KAAM4B,WAEtC,GAAI6P,GAAwB,sBAAdoB,EAEV,OAAO8F,EAAexR,MAAMnH,KAAM4B,WAKtC,IAAImX,GAAgB,EACpB,GAAwB,mBAAbvU,EAAyB,CAChC,IAAKA,EAAS8R,YACV,OAAOqC,EAAexR,MAAMnH,KAAM4B,WAEtCmX,GAAgB,EAEpB,GAAI9B,IAAoBA,EAAgB0B,EAAgBnU,EAAUE,EAAQ9C,WACtE,OAEJ,MAAMkG,EAAUlG,UAAU,GAC1B,GAAI6W,EAEA,IAAK,IAAIrU,EAAI,EAAGA,EAAIqU,EAAkBpU,OAAQD,IAC1C,GAAIyO,IAAc4F,EAAkBrU,GAChC,OAAOuU,EAAexR,MAAMnH,KAAM4B,WAI9C,IAAIkW,EACAvB,GAAO,OACKrT,IAAZ4E,EACAgQ,GAAU,GAEO,IAAZhQ,EACLgQ,GAAU,GAEO,IAAZhQ,EACLgQ,GAAU,GAGVA,IAAUhQ,KAAYA,EAAQgQ,QAC9BvB,IAAOzO,KAAYA,EAAQyO,MAE/B,MAAM5V,EAAOjB,KAAKkB,QACZsX,EAAmB5C,EAAuBzC,GAChD,IAAIsF,EACJ,GAAKD,EAYDC,EAAkBD,EAAiBJ,EA9vBtC,OAEC,aAgvBqB,CAEnB,MAEMpO,EAlvBC,oBAgvBiB4N,EAAoBA,EAAkBzE,GAAaA,GAlvB7E,SAqvBQmG,EAnvBC,oBAivBgB1B,EAAoBA,EAAkBzE,GAAaA,GArvB7E,QAwvBGyC,EAAuBzC,GAAa,GACpCyC,EAAuBzC,GAAoB6D,MAAIhN,EAC/C4L,EAAuBzC,GAAmBiE,KAAIkC,EAC9Cb,EAAkBL,EAAUkB,EAAgBtP,EAKhD,IAiBIlI,EAjBA4W,EAAgB1T,EAAOyT,GACvBF,GAAa,EACjB,GAAIG,EAAAA,CAGA,GADAH,GAAa,EACTzY,EACA,IAAK,IAAI4E,EAAI,EAAGA,EAAIgU,EAAc/T,OAAQD,IACtC,GAAIkU,EAAQF,EAAchU,GAAII,GAE1B,YAMZ4T,EAAgB1T,EAAOyT,GAAmB,GAG9C,MAAMc,EAAkBvU,EAAOoJ,YAAkB1O,KAC3C8Z,EAAe3D,EAAc0D,GAC/BC,IACA1X,EAAS0X,EAAarG,IAErBrR,IACDA,EAASyX,EAAkBL,GACtBtB,EAAoBA,EAAkBzE,GAAaA,IAI5D0E,EAASzP,QAAUA,EACfyO,IAIAgB,EAASzP,QAAQyO,MAAO,GAE5BgB,EAAS7S,OAASA,EAClB6S,EAASO,QAAUA,EACnBP,EAAS1E,UAAYA,EACrB0E,EAASU,WAAaA,EACtB,MAAMlV,EAAOiU,EAAoB3B,OAAiCnS,EAE9DH,IACAA,EAAKwU,SAAWA,GAEpB,MAAMrV,EAAOvB,EAAKwY,kBAAkB3X,EAAQgD,EAAUzB,EAAM8V,EAAkBC,GA+B9E,OA5BAvB,EAAS7S,OAAS,KAEd3B,IACAA,EAAKwU,SAAW,MAIhBhB,IACAzO,EAAQyO,MAAO,IAEZnB,GAA4C,kBAAjBlT,EAAK4F,WAGnC5F,EAAK4F,QAAUA,GAEnB5F,EAAKwC,OAASA,EACdxC,EAAK4V,QAAUA,EACf5V,EAAK2Q,UAAYA,EACbkG,IAEA7W,EAAK8S,iBAAmBxQ,GAEvBuT,EAIDK,EAAcgB,QAAQlX,GAHtBkW,EAAc/Q,KAAKnF,GAKnBkV,EACO1S,OADX,IAyIR,OApIAsL,EAAM2F,GAAsB+C,EAAgBlB,EAAwBpB,EAA2BvS,EAAgBG,EAAcoT,GACzHQ,IACA5H,EAA4BqJ,gBAAIX,EAAgBd,EAxWlB,oBAwW6EI,EAAuBhU,EAAcoT,GAAc,IAElKpH,EAAM6F,GAAyB,WAC3B,MAAMnR,EAAS1E,MAAQmR,EACjB0B,EAAYjR,UAAU,GACtBkG,EAAUlG,UAAU,GAC1B,IAAIkW,EAEAA,OADY5U,IAAZ4E,KAGiB,IAAZA,IAGY,IAAZA,MAIKA,KAAYA,EAAQgQ,UAElC,MAAMtT,EAAW5C,UAAU,GAC3B,IAAK4C,EACD,OAAOiT,EAA0BtQ,MAAMnH,KAAM4B,WAEjD,GAAIqV,IACCA,EAAgBQ,EAA2BjT,EAAUE,EAAQ9C,WAC9D,OAEJ,MAAMsW,EAAmB5C,EAAuBzC,GAChD,IAAIsF,EACAD,IACAC,EAAkBD,EAAiBJ,EAj3BlC,OAEC,UAi3BN,MAAMM,EAAgBD,GAAmBzT,EAAOyT,GAChD,GAAIC,EACA,IAAK,IAAIhU,EAAI,EAAGA,EAAIgU,EAAc/T,OAAQD,IAAK,CAC3C,MAAMkV,EAAelB,EAAchU,GACnC,GAAIkU,EAAQgB,EAAc9U,GAWtB,OAVA4T,EAAclK,OAAO9J,EAAG,GAExBkV,EAAajD,WAAY,EACI,IAAzB+B,EAAc/T,SAGdiV,EAAajB,YAAa,EAC1B3T,EAAOyT,GAAmB,MAE9BmB,EAAa3Y,KAAKuD,WAAWoV,GACzBlC,EACO1S,OAEX,EAQZ,OAAO+S,EAA0BtQ,MAAMnH,KAAM4B,YAEjDoO,EAAM+F,GAA4B,WAC9B,MAAMrR,EAAS1E,MAAQmR,EACjB0B,EAAYjR,UAAU,GACtBoU,EAAY,GACZS,EAAQ8C,EAAe7U,EAAQ4S,EAAoBA,EAAkBzE,GAAaA,GACxF,IAAK,IAAIzO,EAAI,EAAGA,EAAIqS,EAAMpS,OAAQD,IAAK,CACnC,MAAMlC,EAAOuU,EAAMrS,GACnB,IAAII,EAAWtC,EAAK8S,iBAAmB9S,EAAK8S,iBAAmB9S,EAAKX,SACpEyU,EAAU3O,KAAK7C,GAEnB,OAAOwR,GAEXhG,EAAMiG,GAAuC,WACzC,MAAMvR,EAAS1E,MAAQmR,EACjB0B,EAAYjR,UAAU,GAC5B,GAAKiR,EAiBA,CACD,MAAMqF,EAAmB5C,EAAuBzC,GAChD,GAAIqF,EAAkB,CAClB,MAAMC,EAAkBD,EAA0BxB,MAC5C8C,EAAyBtB,EAAyBpB,KAClDL,EAAQ/R,EAAOyT,GACfsB,EAAe/U,EAAO8U,GAC5B,GAAI/C,EAAO,CACP,MAAMiD,EAAcjD,EAAM/F,QAC1B,IAAK,IAAItM,EAAI,EAAGA,EAAIsV,EAAYrV,OAAQD,IAAK,CACzC,MAAMlC,EAAOwX,EAAYtV,GACzB,IAAII,EAAWtC,EAAK8S,iBAAmB9S,EAAK8S,iBAAmB9S,EAAKX,SACpEvB,KAAK6V,GAAuB3N,KAAKlI,KAAM6S,EAAWrO,EAAUtC,EAAK4F,UAGzE,GAAI2R,EAAc,CACd,MAAMC,EAAcD,EAAa/I,QACjC,IAAK,IAAItM,EAAI,EAAGA,EAAIsV,EAAYrV,OAAQD,IAAK,CACzC,MAAMlC,EAAOwX,EAAYtV,GACzB,IAAII,EAAWtC,EAAK8S,iBAAmB9S,EAAK8S,iBAAmB9S,EAAKX,SACpEvB,KAAK6V,GAAuB3N,KAAKlI,KAAM6S,EAAWrO,EAAUtC,EAAK4F,gBArCjE,CACZ,MAAM6R,EAAO/Q,OAAO+Q,KAAKjV,GACzB,IAAK,IAAIN,EAAI,EAAGA,EAAIuV,EAAKtV,OAAQD,IAAK,CAClC,MAAM6L,EAAO0J,EAAKvV,GACZwV,EAAQpE,EAAuBqE,KAAK5J,GAC1C,IAAI6J,EAAUF,GAASA,EAAM,GAKzBE,GAAuB,mBAAZA,GACX9Z,KAAKiW,GAAqC/N,KAAKlI,KAAM8Z,GAI7D9Z,KAAKiW,GAAqC/N,KAAKlI,KAAM,kBA2BzD,GAAIoX,EACA,OAAOpX,MAIfgL,EAAsBgF,EAAM2F,GAAqB6B,GACjDxM,EAAsBgF,EAAM6F,GAAwB4B,GAChDE,GACA3M,EAAsBgF,EAAMiG,GAAsC0B,GAElED,GACA1M,EAAsBgF,EAAM+F,GAA2B2B,IAEpD,EAEX,IAAIqC,EAAU,GACd,IAAK,IAAI3V,EAAI,EAAGA,EAAIqR,EAAKpR,OAAQD,IAC7B2V,EAAQ3V,GAAK2S,EAAwBtB,EAAKrR,GAAIsR,GAElD,OAAOqE,EAEX,SAASR,EAAe7U,EAAQmO,GAC5B,MAAMmH,EAAa,GACnB,IAAK,IAAI/J,KAAQvL,EAAQ,CACrB,MAAMkV,EAAQpE,EAAuBqE,KAAK5J,GAC1C,IAAI6J,EAAUF,GAASA,EAAM,GAC7B,GAAIE,KAAajH,GAAaiH,IAAYjH,GAAY,CAClD,MAAM4D,EAAQ/R,EAAOuL,GACrB,GAAIwG,EACA,IAAK,IAAIrS,EAAI,EAAGA,EAAIqS,EAAMpS,OAAQD,IAC9B4V,EAAW3S,KAAKoP,EAAMrS,KAKtC,OAAO4V,EAEX,SAAS1P,EAAoBrL,EAAQoM,GACjC,MAAM4O,EAAQhb,EAAcgb,MACxBA,GAASA,EAAMpR,WACfwC,EAAIrB,YAAYiQ,EAAMpR,UAAW,2BAA6BrE,GAAa,SAAUwD,EAAMG,GACvFH,EAAiC4O,mCAAI,EAIrCpS,GAAYA,EAAS2C,MAAMa,EAAMG,KAY7C,SAAS+C,EAAeG,EAAK3G,EAAQwV,EAAYC,EAAQC,GACrD,MAAM1Q,EAAShK,KAAKC,WAAWwa,GAC/B,GAAIzV,EAAOgF,GACP,OAEJ,MAAM2Q,EAAiB3V,EAAOgF,GAAUhF,EAAOyV,GAC/CzV,EAAOyV,GAAU,SAAU/a,EAAMkb,EAAMxS,GAoBnC,OAnBIwS,GAAQA,EAAKzR,WACbuR,EAAUG,SAAAA,SAAkBhZ,GACxB,MAAMC,EAAS,GAAG0Y,KAAcC,MAAa5Y,EACvCsH,EAAYyR,EAAKzR,UACvB,GAAIA,EAAU5H,eAAeM,GAAW,CACpC,MAAMiZ,EAAanP,EAAIX,+BAA+B7B,EAAWtH,GAC7DiZ,GAAcA,EAAWhT,OACzBgT,EAAWhT,MAAQ6D,EAAIP,oBAAoB0P,EAAWhT,MAAOhG,GAC7D6J,EAAIJ,kBAAkBqP,EAAKzR,UAAWtH,EAAUiZ,IAE3C3R,EAAUtH,KACfsH,EAAUtH,GAAY8J,EAAIP,oBAAoBjC,EAAUtH,GAAWC,SAGlEqH,EAAUtH,KACfsH,EAAUtH,GAAY8J,EAAIP,oBAAoBjC,EAAUtH,GAAWC,OAIxE6Y,EAAenS,KAAKxD,EAAQtF,EAAMkb,EAAMxS,IAEnDuD,EAAIL,sBAAsBtG,EAAOyV,GAASE,GAc9C,MAAMI,EAAe/a,KAAKC,WACpB+a,EAAkB9R,OAAO6R,EAAa,mBAAqB7R,OAAO2C,eAClEoP,EAA4B/R,OAAO6R,EAAa,6BAClD7R,OAAO0C,yBACLsP,EAAUhS,OAAO4H,OACjBqK,EAAqBJ,EAAa,mBAkCxC,SAASxP,EAAkB2C,EAAKqC,EAAMN,GAClC,MAAMmL,EAA2BnL,EAAKnC,aAEtC,OAAOuN,EAAmBnN,EAAKqC,EAD/BN,EAAOqL,EAAkBpN,EAAKqC,EAAMN,GACOmL,GAE/C,SAASG,EAAiBrN,EAAKqC,GAC3B,OAAOrC,GAAOA,EAAIiN,IAAuBjN,EAAIiN,GAAoB5K,GAErE,SAAS+K,EAAkBpN,EAAKqC,EAAMN,GAclC,OAZK/G,OAAOsS,SAASvL,KACjBA,EAAKnC,cAAe,GAEnBmC,EAAKnC,eAEDI,EAAIiN,IAAwBjS,OAAOsS,SAAStN,IAC7C8M,EAAgB9M,EAAKiN,EAAoB,CAAEnN,UAAU,EAAMlG,MAAO,KAElEoG,EAAIiN,KACJjN,EAAIiN,GAAoB5K,IAAQ,IAGjCN,EAEX,SAASoL,EAAmBnN,EAAKqC,EAAMN,EAAMmL,GACzC,IACI,OAAOJ,EAAgB9M,EAAKqC,EAAMN,GAEtC,MAAO3N,GACH,IAAI2N,EAAKnC,aAwBL,MAAMxL,OArBiC,IAA5B8Y,SACAnL,EAAKnC,aAGZmC,EAAKnC,aAAesN,EAExB,IACI,OAAOJ,EAAgB9M,EAAKqC,EAAMN,GAEtC,MAAO3N,GACH,IAAImZ,EAAW,KACf,IACIA,EAAWpN,KAAKC,UAAU2B,GAE9B,MAAO3N,GACHmZ,EAAWxL,EAAKhH,WAEpBgD,QAAQyP,IAAI,4BAA4BnL,uBAA0BkL,iBAAwBvN,gCAAkC5L,OAoB5I,MAwGMqZ,EAAmB,CACrB,4BACA,aACA,aACA,eACA,sBACA,cACA,eACA,cACA,eACA,oBACA,4BACA,kBACA,aACA,iBACA,UACA,iBACA,UACA,SACA,QACA,WACA,WACA,WACA,mBACA,UACA,qBACA,SACA,gBACA,oBACA,wBACA,0BAOEC,GAAyB,CAAC,YAAa,gBAAiB,YAAa,oBAAqB,mBA6D1FC,GAAkB,CAAC,QACnBC,GAAqB,CAAC,OAAQ,QAAS,QAAS,OAAQ,SAAU,SAAU,gBAC5EC,GAAoB,CAAC,SAAU,SAAU,SACzCC,GAA2B,CAC7B,YAAa,WAAY,QAAS,QAAS,OAAQ,WAAY,UAAW,UAC1E,oBAEEC,GAAqB,CAAC,gBAAiB,WAAY,QAAS,UAAW,QAAS,UAAW,gBAAiB,SAC5GC,GAAsB,CAAC,QAAS,QAAS,OAAQ,WACjDC,GAAmB,CAAC,QAAS,WAC7BC,GApNgC,CAClC,QACA,kBACA,eACA,qBACA,WACA,cACA,OACA,SACA,UACA,iBACA,SACA,mBACA,oBACA,iBACA,YACA,QACA,QACA,cACA,aACA,WACA,OACA,UACA,YACA,WACA,YACA,WACA,OACA,iBACA,UACA,QACA,QACA,QACA,UACA,WACA,oBACA,QACA,UACA,UACA,WACA,QACA,OACA,YACA,aACA,iBACA,qBACA,YACA,aACA,aACA,YACA,WACA,YACA,UACA,aACA,oBACA,QACA,OACA,UACA,gBACA,cACA,eACA,eACA,oBACA,uBACA,4BACA,mBACA,sBACA,yBACA,cACA,WACA,cACA,YACA,WACA,aACA,QACA,SACA,SACA,SACA,UACA,SACA,kBACA,cACA,OACA,OACA,UACA,SACA,UACA,aACA,eACA,cACA,YACA,aACA,WACA,mBACA,gBACA,UACA,SAoH6CC,OAbzB,CAAC,uBAAwB,mBAAoB,6BAC9C,CAAC,eAAgB,qBACf,CAAC,UAvGC,CACvB,qBAAsB,sBAAuB,mBAAoB,SAAU,mBAC3E,sBAAuB,yBAA0B,qBAAsB,kBACvE,qBAAsB,wBAAyB,oBAAqB,mBACpE,mBAAoB,UA8GuGV,EA5EjG,CAC1B,aAAc,YAAa,cAAe,OAAQ,MAAO,QAAS,YAAa,UAC/E,iBAAkB,SAAU,gBAAiB,kBAAmB,qBAChE,2BAA4B,uBAAwB,uBAG5B,CACxB,WACA,cACA,cACA,iBACA,mBACA,kBACA,eACA,aACA,gBACA,gBACA,iBACA,kBACA,cACA,eACA,iBACA,cACA,OACA,UACA,YACA,iBACA,YACA,cACA,WACA,UACA,aACA,eACA,UACA,0BACA,aACA,OACA,gBACA,6BACA,kBACA,qBA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","file":"polyfills-es2015.js","sourcesContent":["/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags.ts';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n","/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst Zone$1 = (function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    const checkDuplicate = global[('__zone_symbol__forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        static __load_patch(name, fn) {\n            if (patches.hasOwnProperty(name)) {\n                if (checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone = zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate.zone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate.zone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone = zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate.zone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate.zone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate.zone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate.zone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate.zone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            this._zone = null;\n            this.runCount = 0;\n            this._zoneDelegates = null;\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (!nativeMicroTaskQueuePromise) {\n                if (global[symbolPromise]) {\n                    nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                }\n            }\n            if (nativeMicroTaskQueuePromise) {\n                let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                if (!nativeThen) {\n                    // native Promise is not patchable, we need to use `then` directly\n                    // issue 1078\n                    nativeThen = nativeMicroTaskQueuePromise['then'];\n                }\n                nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        setNativePromise: (NativePromise) => {\n            // sometimes NativePromise.resolve static function\n            // is not ready yet, (such as core-js/es6.promise)\n            // so we need to check here.\n            if (NativePromise && typeof NativePromise.resolve === 'function') {\n                nativeMicroTaskQueuePromise = NativePromise.resolve(0);\n            }\n        },\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    function __symbol__(name) {\n        return '__zone_symbol__' + name;\n    }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => {\n                        throw uncaughtPromiseError;\n                    });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (handler && typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    try {\n                        // try to print more readable error log\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        const error = err;\n                        error.rejection = value;\n                        error.promise = promise;\n                        error.zone = Zone.current;\n                        error.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(error);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected : forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    class ZoneAwarePromise {\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                value.then((value) => {\n                    resolvedValues[curValueIndex] = value;\n                    unresolvedCount--;\n                    if (unresolvedCount === 0) {\n                        resolve(resolvedValues);\n                    }\n                }, reject);\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        then(onFulfilled, onRejected) {\n            const chainPromise = new this.constructor(null);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            const chainPromise = new this.constructor(null);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    const ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\n    let desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\n    if (!desc || desc.configurable) {\n        desc && delete desc.writable;\n        desc && delete desc.value;\n        if (!desc) {\n            desc = { configurable: true, enumerable: true };\n        }\n        desc.get = function () {\n            // if we already set ZoneAwarePromise, use patched one\n            // otherwise return native one.\n            return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\n        };\n        desc.set = function (NewNativePromise) {\n            if (NewNativePromise === ZoneAwarePromise) {\n                // if the NewNativePromise is ZoneAwarePromise\n                // save to global\n                global[ZONE_AWARE_PROMISE] = NewNativePromise;\n            }\n            else {\n                // if the NewNativePromise is not ZoneAwarePromise\n                // for example: after load zone.js, some library just\n                // set es6-promise to global, if we set it to global\n                // directly, assertZonePatched will fail and angular\n                // will not loaded, so we just set the NewNativePromise\n                // to global[symbolPromise], so the result is just like\n                // we load ES6 Promise before zone.js\n                global[symbolPromise] = NewNativePromise;\n                if (!NewNativePromise.prototype[symbolThen]) {\n                    patchThen(NewNativePromise);\n                }\n                api.setNativePromise(NewNativePromise);\n            }\n        };\n        ObjectDefineProperty(global, 'Promise', desc);\n    }\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function () {\n            let resultPromise = fn.apply(this, arguments);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        const fetch = global['fetch'];\n        if (typeof fetch == 'function') {\n            global[api.symbol('fetch')] = fetch;\n            global['fetch'] = zoneify(fetch);\n        }\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** __zone_symbol__ string const */\nconst ZONE_SYMBOL_PREFIX = '__zone_symbol__';\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nconst NULL_ON_PROP_VALUE = [null];\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signiture\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.substr(2);\n    let eventNameSymbol = zoneSymbolEventNames[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        let previousValue = target[eventNameSymbol];\n        if (previousValue) {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        if (originalDescSet) {\n            originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n        }\n        if (typeof newValue === 'function') {\n            target[eventNameSymbol] = newValue;\n            target.addEventListener(eventName, wrapFn, false);\n        }\n        else {\n            target[eventNameSymbol] = null;\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet && originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.substr(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction copySymbolProperties(src, dest) {\n    if (typeof Object.getOwnPropertySymbols !== 'function') {\n        return;\n    }\n    const symbols = Object.getOwnPropertySymbols(src);\n    symbols.forEach((symbol) => {\n        const desc = Object.getOwnPropertyDescriptor(src, symbol);\n        Object.defineProperty(dest, symbol, {\n            get: function () {\n                return src[symbol];\n            },\n            set: function (value) {\n                if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n                    // if src[symbol] is not writable or not have a setter, just return\n                    return;\n                }\n                src[symbol] = value;\n            },\n            enumerable: desc ? desc.enumerable : true,\n            configurable: desc ? desc.configurable : true\n        });\n    });\n}\nlet shouldCopySymbolProperties = false;\n\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && !(delegate = proto[delegateName])) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n            if (shouldCopySymbolProperties) {\n                copySymbolProperties(delegate, proto[name]);\n            }\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\n\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames$1 = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = /^__zone_symbol__(\\w+)(true|false)$/;\nconst IMMEDIATE_PROPAGATION_SYMBOL = ('__zone_symbol__propagationStopped');\nfunction patchEventTarget(_global, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        task.invoke(task, target, [event]);\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        function checkIsPassive(task) {\n            if (!passiveSupported && typeof taskData.options !== 'boolean' &&\n                typeof taskData.options !== 'undefined' && taskData.options !== null) {\n                // options is a non-null non-undefined object\n                // passive is not supported\n                // don't pass options as object\n                // just pass capture as a boolean\n                task.options = !!taskData.options.capture;\n                taskData.options = task.options;\n            }\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            checkIsPassive(task);\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            checkIsPassive(task);\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const blackListedEvents = Zone[Zone.__symbol__('BLACK_LISTED_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                const eventName = arguments[0];\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const options = arguments[2];\n                if (blackListedEvents) {\n                    // check black list\n                    for (let i = 0; i < blackListedEvents.length; i++) {\n                        if (eventName === blackListedEvents[i]) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                    }\n                }\n                let capture;\n                let once = false;\n                if (options === undefined) {\n                    capture = false;\n                }\n                else if (options === true) {\n                    capture = true;\n                }\n                else if (options === false) {\n                    capture = false;\n                }\n                else {\n                    capture = options ? !!options.capture : false;\n                    once = options ? !!options.once : false;\n                }\n                const zone = Zone.current;\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                let symbolEventName;\n                if (!symbolEventNames) {\n                    // the code is duplicate, but I just want to get some better performance\n                    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n                    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n                    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n                    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n                    zoneSymbolEventNames$1[eventName] = {};\n                    zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n                    zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n                    symbolEventName = capture ? symbolCapture : symbol;\n                }\n                else {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            const eventName = arguments[0];\n            const options = arguments[2];\n            let capture;\n            if (options === undefined) {\n                capture = false;\n            }\n            else if (options === true) {\n                capture = true;\n            }\n            else if (options === false) {\n                capture = false;\n            }\n            else {\n                capture = options ? !!options.capture : false;\n            }\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames$1[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            const eventName = arguments[0];\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            const eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    const foundTasks = [];\n    for (let prop in target) {\n        const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n        let evtName = match && match[1];\n        if (evtName && (!eventName || evtName === eventName)) {\n            const tasks = target[prop];\n            if (tasks) {\n                for (let i = 0; i < tasks.length; i++) {\n                    foundTasks.push(tasks[i]);\n                }\n            }\n        }\n    }\n    return foundTasks;\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                if (prototype.hasOwnProperty(callback)) {\n                    const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                        api._redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                else if (prototype[callback]) {\n                    prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/*\n * This is necessary for Chrome and Chrome mobile, to enable\n * things like redefining `createdCallback` on an element.\n */\nconst zoneSymbol$1 = Zone.__symbol__;\nconst _defineProperty = Object[zoneSymbol$1('defineProperty')] = Object.defineProperty;\nconst _getOwnPropertyDescriptor = Object[zoneSymbol$1('getOwnPropertyDescriptor')] =\n    Object.getOwnPropertyDescriptor;\nconst _create = Object.create;\nconst unconfigurablesKey = zoneSymbol$1('unconfigurables');\nfunction propertyPatch() {\n    Object.defineProperty = function (obj, prop, desc) {\n        if (isUnconfigurable(obj, prop)) {\n            throw new TypeError('Cannot assign to read only property \\'' + prop + '\\' of ' + obj);\n        }\n        const originalConfigurableFlag = desc.configurable;\n        if (prop !== 'prototype') {\n            desc = rewriteDescriptor(obj, prop, desc);\n        }\n        return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);\n    };\n    Object.defineProperties = function (obj, props) {\n        Object.keys(props).forEach(function (prop) {\n            Object.defineProperty(obj, prop, props[prop]);\n        });\n        return obj;\n    };\n    Object.create = function (obj, proto) {\n        if (typeof proto === 'object' && !Object.isFrozen(proto)) {\n            Object.keys(proto).forEach(function (prop) {\n                proto[prop] = rewriteDescriptor(obj, prop, proto[prop]);\n            });\n        }\n        return _create(obj, proto);\n    };\n    Object.getOwnPropertyDescriptor = function (obj, prop) {\n        const desc = _getOwnPropertyDescriptor(obj, prop);\n        if (desc && isUnconfigurable(obj, prop)) {\n            desc.configurable = false;\n        }\n        return desc;\n    };\n}\nfunction _redefineProperty(obj, prop, desc) {\n    const originalConfigurableFlag = desc.configurable;\n    desc = rewriteDescriptor(obj, prop, desc);\n    return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);\n}\nfunction isUnconfigurable(obj, prop) {\n    return obj && obj[unconfigurablesKey] && obj[unconfigurablesKey][prop];\n}\nfunction rewriteDescriptor(obj, prop, desc) {\n    // issue-927, if the desc is frozen, don't try to change the desc\n    if (!Object.isFrozen(desc)) {\n        desc.configurable = true;\n    }\n    if (!desc.configurable) {\n        // issue-927, if the obj is frozen, don't try to set the desc to obj\n        if (!obj[unconfigurablesKey] && !Object.isFrozen(obj)) {\n            _defineProperty(obj, unconfigurablesKey, { writable: true, value: {} });\n        }\n        if (obj[unconfigurablesKey]) {\n            obj[unconfigurablesKey][prop] = true;\n        }\n    }\n    return desc;\n}\nfunction _tryDefineProperty(obj, prop, desc, originalConfigurableFlag) {\n    try {\n        return _defineProperty(obj, prop, desc);\n    }\n    catch (error) {\n        if (desc.configurable) {\n            // In case of errors, when the configurable flag was likely set by rewriteDescriptor(), let's\n            // retry with the original flag value\n            if (typeof originalConfigurableFlag == 'undefined') {\n                delete desc.configurable;\n            }\n            else {\n                desc.configurable = originalConfigurableFlag;\n            }\n            try {\n                return _defineProperty(obj, prop, desc);\n            }\n            catch (error) {\n                let descJson = null;\n                try {\n                    descJson = JSON.stringify(desc);\n                }\n                catch (error) {\n                    descJson = desc.toString();\n                }\n                console.log(`Attempting to configure '${prop}' with descriptor '${descJson}' on object '${obj}' and got error, giving up: ${error}`);\n            }\n        }\n        else {\n            throw error;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nconst globalEventHandlersEventNames = [\n    'abort',\n    'animationcancel',\n    'animationend',\n    'animationiteration',\n    'auxclick',\n    'beforeinput',\n    'blur',\n    'cancel',\n    'canplay',\n    'canplaythrough',\n    'change',\n    'compositionstart',\n    'compositionupdate',\n    'compositionend',\n    'cuechange',\n    'click',\n    'close',\n    'contextmenu',\n    'curechange',\n    'dblclick',\n    'drag',\n    'dragend',\n    'dragenter',\n    'dragexit',\n    'dragleave',\n    'dragover',\n    'drop',\n    'durationchange',\n    'emptied',\n    'ended',\n    'error',\n    'focus',\n    'focusin',\n    'focusout',\n    'gotpointercapture',\n    'input',\n    'invalid',\n    'keydown',\n    'keypress',\n    'keyup',\n    'load',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'lostpointercapture',\n    'mousedown',\n    'mouseenter',\n    'mouseleave',\n    'mousemove',\n    'mouseout',\n    'mouseover',\n    'mouseup',\n    'mousewheel',\n    'orientationchange',\n    'pause',\n    'play',\n    'playing',\n    'pointercancel',\n    'pointerdown',\n    'pointerenter',\n    'pointerleave',\n    'pointerlockchange',\n    'mozpointerlockchange',\n    'webkitpointerlockerchange',\n    'pointerlockerror',\n    'mozpointerlockerror',\n    'webkitpointerlockerror',\n    'pointermove',\n    'pointout',\n    'pointerover',\n    'pointerup',\n    'progress',\n    'ratechange',\n    'reset',\n    'resize',\n    'scroll',\n    'seeked',\n    'seeking',\n    'select',\n    'selectionchange',\n    'selectstart',\n    'show',\n    'sort',\n    'stalled',\n    'submit',\n    'suspend',\n    'timeupdate',\n    'volumechange',\n    'touchcancel',\n    'touchmove',\n    'touchstart',\n    'touchend',\n    'transitioncancel',\n    'transitionend',\n    'waiting',\n    'wheel'\n];\nconst documentEventNames = [\n    'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n    'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n    'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n    'visibilitychange', 'resume'\n];\nconst windowEventNames = [\n    'absolutedeviceorientation',\n    'afterinput',\n    'afterprint',\n    'appinstalled',\n    'beforeinstallprompt',\n    'beforeprint',\n    'beforeunload',\n    'devicelight',\n    'devicemotion',\n    'deviceorientation',\n    'deviceorientationabsolute',\n    'deviceproximity',\n    'hashchange',\n    'languagechange',\n    'message',\n    'mozbeforepaint',\n    'offline',\n    'online',\n    'paint',\n    'pageshow',\n    'pagehide',\n    'popstate',\n    'rejectionhandled',\n    'storage',\n    'unhandledrejection',\n    'unload',\n    'userproximity',\n    'vrdisplyconnected',\n    'vrdisplaydisconnected',\n    'vrdisplaypresentchange'\n];\nconst htmlElementEventNames = [\n    'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n    'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n    'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n];\nconst mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\nconst ieElementEventNames = [\n    'activate',\n    'afterupdate',\n    'ariarequest',\n    'beforeactivate',\n    'beforedeactivate',\n    'beforeeditfocus',\n    'beforeupdate',\n    'cellchange',\n    'controlselect',\n    'dataavailable',\n    'datasetchanged',\n    'datasetcomplete',\n    'errorupdate',\n    'filterchange',\n    'layoutcomplete',\n    'losecapture',\n    'move',\n    'moveend',\n    'movestart',\n    'propertychange',\n    'resizeend',\n    'resizestart',\n    'rowenter',\n    'rowexit',\n    'rowsdelete',\n    'rowsinserted',\n    'command',\n    'compassneedscalibration',\n    'deactivate',\n    'help',\n    'mscontentzoom',\n    'msmanipulationstatechanged',\n    'msgesturechange',\n    'msgesturedoubletap',\n    'msgestureend',\n    'msgesturehold',\n    'msgesturestart',\n    'msgesturetap',\n    'msgotpointercapture',\n    'msinertiastart',\n    'mslostpointercapture',\n    'mspointercancel',\n    'mspointerdown',\n    'mspointerenter',\n    'mspointerhover',\n    'mspointerleave',\n    'mspointermove',\n    'mspointerout',\n    'mspointerover',\n    'mspointerup',\n    'pointerout',\n    'mssitemodejumplistitemremoved',\n    'msthumbnailclick',\n    'stop',\n    'storagecommit'\n];\nconst webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\nconst formEventNames = ['autocomplete', 'autocompleteerror'];\nconst detailEventNames = ['toggle'];\nconst frameEventNames = ['load'];\nconst frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\nconst marqueeEventNames = ['bounce', 'finish', 'start'];\nconst XMLHttpRequestEventNames = [\n    'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n    'readystatechange'\n];\nconst IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\nconst websocketEventNames = ['close', 'error', 'open', 'message'];\nconst workerEventNames = ['error', 'message'];\nconst eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const supportsWebSocket = typeof WebSocket !== 'undefined';\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    if (isBrowser) {\n        const internalWindow = window;\n        const ignoreErrorProperties = isIE ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n        patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n        if (typeof internalWindow['SVGElement'] !== 'undefined') {\n            patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n        }\n        patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n        const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n        if (HTMLMarqueeElement) {\n            patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n        }\n        const Worker = internalWindow['Worker'];\n        if (Worker) {\n            patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n        }\n    }\n    const XMLHttpRequest = _global['XMLHttpRequest'];\n    if (XMLHttpRequest) {\n        // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n        patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget) {\n        patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    if (typeof IDBIndex !== 'undefined') {\n        patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n    }\n    if (supportsWebSocket) {\n        patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = _redefineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames: zoneSymbolEventNames$1,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        function timer() {\n            try {\n                task.invoke.apply(this, arguments);\n            }\n            finally {\n                // issue-934, task will be cancelled\n                // even it is a periodic task such as\n                // setInterval\n                if (!(task.data && task.data.isPeriodic)) {\n                    if (typeof data.handleId === 'number') {\n                        // in non-nodejs env, we remove timerId\n                        // from local cache\n                        delete tasksByHandleId[data.handleId];\n                    }\n                    else if (data.handleId) {\n                        // Node returns complex objects as handleIds\n                        // we remove task reference from timer object\n                        data.handleId[taskSymbol] = null;\n                    }\n                }\n            }\n        }\n        data.args[0] = timer;\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative(task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n    }\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n    patchClass('IntersectionObserver');\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n    propertyPatch();\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        const loadTasks = target['__zone_symbol__loadfalse'];\n                        if (loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target['__zone_symbol__loadfalse'];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n"]}